
laba3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000d88  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00800060  00000d88  00000dfc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      0000005c  00000000  00000000  00000e10  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000e6c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  00000ea8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000d67  00000000  00000000  00000f10  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007fc  00000000  00000000  00001c77  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000504  00000000  00000000  00002473  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000012c  00000000  00000000  00002978  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003f2  00000000  00000000  00002aa4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000064b  00000000  00000000  00002e96  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  000034e1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 e8       	ldi	r30, 0x88	; 136
  68:	fd e0       	ldi	r31, 0x0D	; 13
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 37       	cpi	r26, 0x74	; 116
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 a5 01 	call	0x34a	; 0x34a <main>
  7a:	0c 94 c2 06 	jmp	0xd84	; 0xd84 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <LCDWriteByte>:
	_delay_ms(100);
}

void LCDWriteByte(_LCDRegister reg, uint8_t data)
{
	LCD_PORT&=LCD_MASK;
  82:	9b b3       	in	r25, 0x1b	; 27
  84:	90 7c       	andi	r25, 0xC0	; 192
  86:	9b bb       	out	0x1b, r25	; 27
	
	if(reg)LCD_PORT|=LCD_RS;
  88:	81 11       	cpse	r24, r1
  8a:	dc 9a       	sbi	0x1b, 4	; 27
	
	LCD_PORT|=data>>4;
  8c:	8b b3       	in	r24, 0x1b	; 27
  8e:	96 2f       	mov	r25, r22
  90:	92 95       	swap	r25
  92:	9f 70       	andi	r25, 0x0F	; 15
  94:	89 2b       	or	r24, r25
  96:	8b bb       	out	0x1b, r24	; 27
	LCD_PORT|=LCD_E;
  98:	dd 9a       	sbi	0x1b, 5	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  9a:	8d e0       	ldi	r24, 0x0D	; 13
  9c:	8a 95       	dec	r24
  9e:	f1 f7       	brne	.-4      	; 0x9c <LCDWriteByte+0x1a>
  a0:	00 00       	nop
	_delay_us(40);
	LCD_PORT&=~LCD_E;
  a2:	dd 98       	cbi	0x1b, 5	; 27
  a4:	8d e0       	ldi	r24, 0x0D	; 13
  a6:	8a 95       	dec	r24
  a8:	f1 f7       	brne	.-4      	; 0xa6 <LCDWriteByte+0x24>
  aa:	00 00       	nop
	_delay_us(40);
	
	LCD_PORT&=0xf0;
  ac:	8b b3       	in	r24, 0x1b	; 27
  ae:	80 7f       	andi	r24, 0xF0	; 240
  b0:	8b bb       	out	0x1b, r24	; 27
	
	LCD_PORT|=data&0x0f;
  b2:	8b b3       	in	r24, 0x1b	; 27
  b4:	6f 70       	andi	r22, 0x0F	; 15
  b6:	68 2b       	or	r22, r24
  b8:	6b bb       	out	0x1b, r22	; 27
	LCD_PORT|=LCD_E;
  ba:	dd 9a       	sbi	0x1b, 5	; 27
  bc:	8d e0       	ldi	r24, 0x0D	; 13
  be:	8a 95       	dec	r24
  c0:	f1 f7       	brne	.-4      	; 0xbe <LCDWriteByte+0x3c>
  c2:	00 00       	nop
	_delay_us(40);
	LCD_PORT&=~LCD_E;
  c4:	dd 98       	cbi	0x1b, 5	; 27
  c6:	8d e0       	ldi	r24, 0x0D	; 13
  c8:	8a 95       	dec	r24
  ca:	f1 f7       	brne	.-4      	; 0xc8 <LCDWriteByte+0x46>
  cc:	00 00       	nop
  ce:	08 95       	ret

000000d0 <LCDInit>:
#define LCD_E (1<<5)
#define LCD_MASK 0xC0

void LCDInit()
{
	DDRA|=~LCD_MASK;
  d0:	8a b3       	in	r24, 0x1a	; 26
  d2:	8f 63       	ori	r24, 0x3F	; 63
  d4:	8a bb       	out	0x1a, r24	; 26
	LCDWriteByte(LCD_IR, 0x33);
  d6:	63 e3       	ldi	r22, 0x33	; 51
  d8:	80 e0       	ldi	r24, 0x00	; 0
  da:	0e 94 41 00 	call	0x82	; 0x82 <LCDWriteByte>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  de:	87 ea       	ldi	r24, 0xA7	; 167
  e0:	91 e6       	ldi	r25, 0x61	; 97
  e2:	01 97       	sbiw	r24, 0x01	; 1
  e4:	f1 f7       	brne	.-4      	; 0xe2 <LCDInit+0x12>
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <LCDInit+0x18>
  e8:	00 00       	nop
	_delay_ms(100);
	LCDWriteByte(LCD_IR, 0x32);
  ea:	62 e3       	ldi	r22, 0x32	; 50
  ec:	80 e0       	ldi	r24, 0x00	; 0
  ee:	0e 94 41 00 	call	0x82	; 0x82 <LCDWriteByte>
  f2:	87 ea       	ldi	r24, 0xA7	; 167
  f4:	91 e6       	ldi	r25, 0x61	; 97
  f6:	01 97       	sbiw	r24, 0x01	; 1
  f8:	f1 f7       	brne	.-4      	; 0xf6 <LCDInit+0x26>
  fa:	00 c0       	rjmp	.+0      	; 0xfc <LCDInit+0x2c>
  fc:	00 00       	nop
	_delay_ms(100);
	LCDWriteByte(LCD_IR, 0x28);
  fe:	68 e2       	ldi	r22, 0x28	; 40
 100:	80 e0       	ldi	r24, 0x00	; 0
 102:	0e 94 41 00 	call	0x82	; 0x82 <LCDWriteByte>
 106:	87 ea       	ldi	r24, 0xA7	; 167
 108:	91 e6       	ldi	r25, 0x61	; 97
 10a:	01 97       	sbiw	r24, 0x01	; 1
 10c:	f1 f7       	brne	.-4      	; 0x10a <LCDInit+0x3a>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <LCDInit+0x40>
 110:	00 00       	nop
	_delay_ms(100);
	LCDWriteByte(LCD_IR, 0x01);
 112:	61 e0       	ldi	r22, 0x01	; 1
 114:	80 e0       	ldi	r24, 0x00	; 0
 116:	0e 94 41 00 	call	0x82	; 0x82 <LCDWriteByte>
 11a:	87 ea       	ldi	r24, 0xA7	; 167
 11c:	91 e6       	ldi	r25, 0x61	; 97
 11e:	01 97       	sbiw	r24, 0x01	; 1
 120:	f1 f7       	brne	.-4      	; 0x11e <LCDInit+0x4e>
 122:	00 c0       	rjmp	.+0      	; 0x124 <LCDInit+0x54>
 124:	00 00       	nop
	_delay_ms(100);
	LCDWriteByte(LCD_IR, 0x0c);
 126:	6c e0       	ldi	r22, 0x0C	; 12
 128:	80 e0       	ldi	r24, 0x00	; 0
 12a:	0e 94 41 00 	call	0x82	; 0x82 <LCDWriteByte>
 12e:	87 ea       	ldi	r24, 0xA7	; 167
 130:	91 e6       	ldi	r25, 0x61	; 97
 132:	01 97       	sbiw	r24, 0x01	; 1
 134:	f1 f7       	brne	.-4      	; 0x132 <LCDInit+0x62>
 136:	00 c0       	rjmp	.+0      	; 0x138 <LCDInit+0x68>
 138:	00 00       	nop
 13a:	08 95       	ret

0000013c <LCDKursorPosihin>:
	_delay_us(40);
}

void LCDKursorPosihin(uint8_t row, uint8_t col)
{
	if(!row) {
 13c:	81 11       	cpse	r24, r1
 13e:	04 c0       	rjmp	.+8      	; 0x148 <LCDKursorPosihin+0xc>
		LCDWriteByte(LCD_IR, (1<<7)|col);
 140:	60 68       	ori	r22, 0x80	; 128
 142:	0e 94 41 00 	call	0x82	; 0x82 <LCDWriteByte>
 146:	08 95       	ret
	}
	else{
		LCDWriteByte(LCD_IR, (3<<6)|col);
 148:	60 6c       	ori	r22, 0xC0	; 192
 14a:	80 e0       	ldi	r24, 0x00	; 0
 14c:	0e 94 41 00 	call	0x82	; 0x82 <LCDWriteByte>
 150:	08 95       	ret

00000152 <LCDWriteStr>:
	}
}

void LCDWriteStr(char *data)
{
 152:	ef 92       	push	r14
 154:	ff 92       	push	r15
 156:	0f 93       	push	r16
 158:	1f 93       	push	r17
 15a:	cf 93       	push	r28
 15c:	df 93       	push	r29
 15e:	8c 01       	movw	r16, r24
 160:	7c 01       	movw	r14, r24
	for (int i = 0; i < strlen(data); i++)
 162:	c0 e0       	ldi	r28, 0x00	; 0
 164:	d0 e0       	ldi	r29, 0x00	; 0
 166:	07 c0       	rjmp	.+14     	; 0x176 <LCDWriteStr+0x24>
		LCDWriteByte(LCD_DR, data[i]);
 168:	f7 01       	movw	r30, r14
 16a:	61 91       	ld	r22, Z+
 16c:	7f 01       	movw	r14, r30
 16e:	81 e0       	ldi	r24, 0x01	; 1
 170:	0e 94 41 00 	call	0x82	; 0x82 <LCDWriteByte>
	}
}

void LCDWriteStr(char *data)
{
	for (int i = 0; i < strlen(data); i++)
 174:	21 96       	adiw	r28, 0x01	; 1
 176:	f8 01       	movw	r30, r16
 178:	01 90       	ld	r0, Z+
 17a:	00 20       	and	r0, r0
 17c:	e9 f7       	brne	.-6      	; 0x178 <LCDWriteStr+0x26>
 17e:	31 97       	sbiw	r30, 0x01	; 1
 180:	e0 1b       	sub	r30, r16
 182:	f1 0b       	sbc	r31, r17
 184:	ce 17       	cp	r28, r30
 186:	df 07       	cpc	r29, r31
 188:	78 f3       	brcs	.-34     	; 0x168 <LCDWriteStr+0x16>
		LCDWriteByte(LCD_DR, data[i]);
}
 18a:	df 91       	pop	r29
 18c:	cf 91       	pop	r28
 18e:	1f 91       	pop	r17
 190:	0f 91       	pop	r16
 192:	ff 90       	pop	r15
 194:	ef 90       	pop	r14
 196:	08 95       	ret

00000198 <LCDWriteFloat>:

void LCDWriteFloat(float adc_read)
{
 198:	8f 92       	push	r8
 19a:	9f 92       	push	r9
 19c:	af 92       	push	r10
 19e:	bf 92       	push	r11
 1a0:	cf 92       	push	r12
 1a2:	df 92       	push	r13
 1a4:	ef 92       	push	r14
 1a6:	ff 92       	push	r15
 1a8:	0f 93       	push	r16
 1aa:	1f 93       	push	r17
 1ac:	cf 93       	push	r28
 1ae:	df 93       	push	r29
 1b0:	cd b7       	in	r28, 0x3d	; 61
 1b2:	de b7       	in	r29, 0x3e	; 62
 1b4:	c4 56       	subi	r28, 0x64	; 100
 1b6:	d1 09       	sbc	r29, r1
 1b8:	0f b6       	in	r0, 0x3f	; 63
 1ba:	f8 94       	cli
 1bc:	de bf       	out	0x3e, r29	; 62
 1be:	0f be       	out	0x3f, r0	; 63
 1c0:	cd bf       	out	0x3d, r28	; 61
 1c2:	6b 01       	movw	r12, r22
 1c4:	7c 01       	movw	r14, r24
	char str[100];

	char *tmpSign = (adc_read < 0) ? "-" : "";
 1c6:	20 e0       	ldi	r18, 0x00	; 0
 1c8:	30 e0       	ldi	r19, 0x00	; 0
 1ca:	a9 01       	movw	r20, r18
 1cc:	0e 94 32 02 	call	0x464	; 0x464 <__cmpsf2>
 1d0:	88 23       	and	r24, r24
 1d2:	64 f0       	brlt	.+24     	; 0x1ec <LCDWriteFloat+0x54>
	float tmpVal = (adc_read < 0) ? -adc_read : adc_read;
 1d4:	20 e0       	ldi	r18, 0x00	; 0
 1d6:	30 e0       	ldi	r19, 0x00	; 0
 1d8:	a9 01       	movw	r20, r18
 1da:	c7 01       	movw	r24, r14
 1dc:	b6 01       	movw	r22, r12
 1de:	0e 94 32 02 	call	0x464	; 0x464 <__cmpsf2>
 1e2:	88 23       	and	r24, r24
 1e4:	54 f4       	brge	.+20     	; 0x1fa <LCDWriteFloat+0x62>

void LCDWriteFloat(float adc_read)
{
	char str[100];

	char *tmpSign = (adc_read < 0) ? "-" : "";
 1e6:	0a e6       	ldi	r16, 0x6A	; 106
 1e8:	10 e0       	ldi	r17, 0x00	; 0
 1ea:	02 c0       	rjmp	.+4      	; 0x1f0 <LCDWriteFloat+0x58>
 1ec:	00 e6       	ldi	r16, 0x60	; 96
 1ee:	10 e0       	ldi	r17, 0x00	; 0
	float tmpVal = (adc_read < 0) ? -adc_read : adc_read;
 1f0:	f7 fa       	bst	r15, 7
 1f2:	f0 94       	com	r15
 1f4:	f7 f8       	bld	r15, 7
 1f6:	f0 94       	com	r15
 1f8:	02 c0       	rjmp	.+4      	; 0x1fe <LCDWriteFloat+0x66>

void LCDWriteFloat(float adc_read)
{
	char str[100];

	char *tmpSign = (adc_read < 0) ? "-" : "";
 1fa:	0a e6       	ldi	r16, 0x6A	; 106
 1fc:	10 e0       	ldi	r17, 0x00	; 0
	float tmpVal = (adc_read < 0) ? -adc_read : adc_read;

	int tmpInt1 = tmpVal;                  // Get the integer (678).
 1fe:	c7 01       	movw	r24, r14
 200:	b6 01       	movw	r22, r12
 202:	0e 94 37 02 	call	0x46e	; 0x46e <__fixsfsi>
 206:	4b 01       	movw	r8, r22
 208:	5c 01       	movw	r10, r24
	float tmpFrac = tmpVal - tmpInt1;      // Get fraction (0.0123).
	int tmpInt2 = trunc(tmpFrac * 1000);  // Turn into integer (123).
 20a:	07 2e       	mov	r0, r23
 20c:	00 0c       	add	r0, r0
 20e:	88 0b       	sbc	r24, r24
 210:	99 0b       	sbc	r25, r25
 212:	0e 94 6f 02 	call	0x4de	; 0x4de <__floatsisf>
 216:	9b 01       	movw	r18, r22
 218:	ac 01       	movw	r20, r24
 21a:	c7 01       	movw	r24, r14
 21c:	b6 01       	movw	r22, r12
 21e:	0e 94 c5 01 	call	0x38a	; 0x38a <__subsf3>
 222:	20 e0       	ldi	r18, 0x00	; 0
 224:	30 e0       	ldi	r19, 0x00	; 0
 226:	4a e7       	ldi	r20, 0x7A	; 122
 228:	54 e4       	ldi	r21, 0x44	; 68
 22a:	0e 94 1f 03 	call	0x63e	; 0x63e <__mulsf3>
 22e:	0e 94 8c 03 	call	0x718	; 0x718 <trunc>

// Print as parts, note that you need 0-padding for fractional bit.

	sprintf (str, "%s%d.%d\n", tmpSign, tmpInt1, tmpInt2);
 232:	0e 94 37 02 	call	0x46e	; 0x46e <__fixsfsi>
 236:	7f 93       	push	r23
 238:	6f 93       	push	r22
 23a:	9f 92       	push	r9
 23c:	8f 92       	push	r8
 23e:	1f 93       	push	r17
 240:	0f 93       	push	r16
 242:	82 e6       	ldi	r24, 0x62	; 98
 244:	90 e0       	ldi	r25, 0x00	; 0
 246:	9f 93       	push	r25
 248:	8f 93       	push	r24
 24a:	8e 01       	movw	r16, r28
 24c:	0f 5f       	subi	r16, 0xFF	; 255
 24e:	1f 4f       	sbci	r17, 0xFF	; 255
 250:	1f 93       	push	r17
 252:	0f 93       	push	r16
 254:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <sprintf>
 258:	78 01       	movw	r14, r16
	for (int i = 0; i < strlen(str); i++)
 25a:	0f b6       	in	r0, 0x3f	; 63
 25c:	f8 94       	cli
 25e:	de bf       	out	0x3e, r29	; 62
 260:	0f be       	out	0x3f, r0	; 63
 262:	cd bf       	out	0x3d, r28	; 61
 264:	00 e0       	ldi	r16, 0x00	; 0
 266:	10 e0       	ldi	r17, 0x00	; 0
 268:	67 01       	movw	r12, r14
 26a:	08 c0       	rjmp	.+16     	; 0x27c <LCDWriteFloat+0xe4>
	{
		LCDWriteByte(LCD_DR, str[i]);
 26c:	f7 01       	movw	r30, r14
 26e:	61 91       	ld	r22, Z+
 270:	7f 01       	movw	r14, r30
 272:	81 e0       	ldi	r24, 0x01	; 1
 274:	0e 94 41 00 	call	0x82	; 0x82 <LCDWriteByte>
	int tmpInt2 = trunc(tmpFrac * 1000);  // Turn into integer (123).

// Print as parts, note that you need 0-padding for fractional bit.

	sprintf (str, "%s%d.%d\n", tmpSign, tmpInt1, tmpInt2);
	for (int i = 0; i < strlen(str); i++)
 278:	0f 5f       	subi	r16, 0xFF	; 255
 27a:	1f 4f       	sbci	r17, 0xFF	; 255
 27c:	f6 01       	movw	r30, r12
 27e:	01 90       	ld	r0, Z+
 280:	00 20       	and	r0, r0
 282:	e9 f7       	brne	.-6      	; 0x27e <LCDWriteFloat+0xe6>
 284:	31 97       	sbiw	r30, 0x01	; 1
 286:	ec 19       	sub	r30, r12
 288:	fd 09       	sbc	r31, r13
 28a:	0e 17       	cp	r16, r30
 28c:	1f 07       	cpc	r17, r31
 28e:	70 f3       	brcs	.-36     	; 0x26c <LCDWriteFloat+0xd4>
	{
		LCDWriteByte(LCD_DR, str[i]);
	}
	
}
 290:	cc 59       	subi	r28, 0x9C	; 156
 292:	df 4f       	sbci	r29, 0xFF	; 255
 294:	0f b6       	in	r0, 0x3f	; 63
 296:	f8 94       	cli
 298:	de bf       	out	0x3e, r29	; 62
 29a:	0f be       	out	0x3f, r0	; 63
 29c:	cd bf       	out	0x3d, r28	; 61
 29e:	df 91       	pop	r29
 2a0:	cf 91       	pop	r28
 2a2:	1f 91       	pop	r17
 2a4:	0f 91       	pop	r16
 2a6:	ff 90       	pop	r15
 2a8:	ef 90       	pop	r14
 2aa:	df 90       	pop	r13
 2ac:	cf 90       	pop	r12
 2ae:	bf 90       	pop	r11
 2b0:	af 90       	pop	r10
 2b2:	9f 90       	pop	r9
 2b4:	8f 90       	pop	r8
 2b6:	08 95       	ret

000002b8 <LCDWriteInt>:

void LCDWriteInt(int data)
{
 2b8:	cf 92       	push	r12
 2ba:	df 92       	push	r13
 2bc:	ef 92       	push	r14
 2be:	ff 92       	push	r15
 2c0:	0f 93       	push	r16
 2c2:	1f 93       	push	r17
 2c4:	cf 93       	push	r28
 2c6:	df 93       	push	r29
 2c8:	cd b7       	in	r28, 0x3d	; 61
 2ca:	de b7       	in	r29, 0x3e	; 62
 2cc:	2a 97       	sbiw	r28, 0x0a	; 10
 2ce:	0f b6       	in	r0, 0x3f	; 63
 2d0:	f8 94       	cli
 2d2:	de bf       	out	0x3e, r29	; 62
 2d4:	0f be       	out	0x3f, r0	; 63
 2d6:	cd bf       	out	0x3d, r28	; 61
	char str[10];
	sprintf (str, "%d", data);
 2d8:	9f 93       	push	r25
 2da:	8f 93       	push	r24
 2dc:	8b e6       	ldi	r24, 0x6B	; 107
 2de:	90 e0       	ldi	r25, 0x00	; 0
 2e0:	9f 93       	push	r25
 2e2:	8f 93       	push	r24
 2e4:	8e 01       	movw	r16, r28
 2e6:	0f 5f       	subi	r16, 0xFF	; 255
 2e8:	1f 4f       	sbci	r17, 0xFF	; 255
 2ea:	1f 93       	push	r17
 2ec:	0f 93       	push	r16
 2ee:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <sprintf>
 2f2:	78 01       	movw	r14, r16
	for (int i = 0; i < strlen(str); i++)
 2f4:	0f 90       	pop	r0
 2f6:	0f 90       	pop	r0
 2f8:	0f 90       	pop	r0
 2fa:	0f 90       	pop	r0
 2fc:	0f 90       	pop	r0
 2fe:	0f 90       	pop	r0
 300:	00 e0       	ldi	r16, 0x00	; 0
 302:	10 e0       	ldi	r17, 0x00	; 0
 304:	67 01       	movw	r12, r14
 306:	08 c0       	rjmp	.+16     	; 0x318 <LCDWriteInt+0x60>
	{
		LCDWriteByte(LCD_DR, str[i]);
 308:	f7 01       	movw	r30, r14
 30a:	61 91       	ld	r22, Z+
 30c:	7f 01       	movw	r14, r30
 30e:	81 e0       	ldi	r24, 0x01	; 1
 310:	0e 94 41 00 	call	0x82	; 0x82 <LCDWriteByte>

void LCDWriteInt(int data)
{
	char str[10];
	sprintf (str, "%d", data);
	for (int i = 0; i < strlen(str); i++)
 314:	0f 5f       	subi	r16, 0xFF	; 255
 316:	1f 4f       	sbci	r17, 0xFF	; 255
 318:	f6 01       	movw	r30, r12
 31a:	01 90       	ld	r0, Z+
 31c:	00 20       	and	r0, r0
 31e:	e9 f7       	brne	.-6      	; 0x31a <LCDWriteInt+0x62>
 320:	31 97       	sbiw	r30, 0x01	; 1
 322:	ec 19       	sub	r30, r12
 324:	fd 09       	sbc	r31, r13
 326:	0e 17       	cp	r16, r30
 328:	1f 07       	cpc	r17, r31
 32a:	70 f3       	brcs	.-36     	; 0x308 <LCDWriteInt+0x50>
	{
		LCDWriteByte(LCD_DR, str[i]);
	}
 32c:	2a 96       	adiw	r28, 0x0a	; 10
 32e:	0f b6       	in	r0, 0x3f	; 63
 330:	f8 94       	cli
 332:	de bf       	out	0x3e, r29	; 62
 334:	0f be       	out	0x3f, r0	; 63
 336:	cd bf       	out	0x3d, r28	; 61
 338:	df 91       	pop	r29
 33a:	cf 91       	pop	r28
 33c:	1f 91       	pop	r17
 33e:	0f 91       	pop	r16
 340:	ff 90       	pop	r15
 342:	ef 90       	pop	r14
 344:	df 90       	pop	r13
 346:	cf 90       	pop	r12
 348:	08 95       	ret

0000034a <main>:
#include "LCD.h"
#define TCN75ADDRES 0x7

int main(void)
{
    LCDInit();
 34a:	0e 94 68 00 	call	0xd0	; 0xd0 <LCDInit>
	
    while (1) 
    {
		LCDKursorPosihin(0,0);
 34e:	60 e0       	ldi	r22, 0x00	; 0
 350:	70 e0       	ldi	r23, 0x00	; 0
 352:	80 e0       	ldi	r24, 0x00	; 0
 354:	90 e0       	ldi	r25, 0x00	; 0
 356:	0e 94 9e 00 	call	0x13c	; 0x13c <LCDKursorPosihin>
//		LDCWriteStr("Temp = ");
		
//		LCDWriteInt((int)(TCN75ReadTemp(TCN75ADDRES)>>8));
		LCDWriteStr(";   ");
 35a:	8e e6       	ldi	r24, 0x6E	; 110
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	0e 94 a9 00 	call	0x152	; 0x152 <LCDWriteStr>
		LCDWriteFloat(15.75);
 362:	60 e0       	ldi	r22, 0x00	; 0
 364:	70 e0       	ldi	r23, 0x00	; 0
 366:	8c e7       	ldi	r24, 0x7C	; 124
 368:	91 e4       	ldi	r25, 0x41	; 65
 36a:	0e 94 cc 00 	call	0x198	; 0x198 <LCDWriteFloat>
		LCDWriteInt(1150);
 36e:	8e e7       	ldi	r24, 0x7E	; 126
 370:	94 e0       	ldi	r25, 0x04	; 4
 372:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <LCDWriteInt>
 376:	2f e9       	ldi	r18, 0x9F	; 159
 378:	86 e8       	ldi	r24, 0x86	; 134
 37a:	91 e0       	ldi	r25, 0x01	; 1
 37c:	21 50       	subi	r18, 0x01	; 1
 37e:	80 40       	sbci	r24, 0x00	; 0
 380:	90 40       	sbci	r25, 0x00	; 0
 382:	e1 f7       	brne	.-8      	; 0x37c <main+0x32>
 384:	00 c0       	rjmp	.+0      	; 0x386 <main+0x3c>
 386:	00 00       	nop
 388:	e2 cf       	rjmp	.-60     	; 0x34e <main+0x4>

0000038a <__subsf3>:
 38a:	50 58       	subi	r21, 0x80	; 128

0000038c <__addsf3>:
 38c:	bb 27       	eor	r27, r27
 38e:	aa 27       	eor	r26, r26
 390:	0e 94 dd 01 	call	0x3ba	; 0x3ba <__addsf3x>
 394:	0c 94 e5 02 	jmp	0x5ca	; 0x5ca <__fp_round>
 398:	0e 94 d7 02 	call	0x5ae	; 0x5ae <__fp_pscA>
 39c:	38 f0       	brcs	.+14     	; 0x3ac <__addsf3+0x20>
 39e:	0e 94 de 02 	call	0x5bc	; 0x5bc <__fp_pscB>
 3a2:	20 f0       	brcs	.+8      	; 0x3ac <__addsf3+0x20>
 3a4:	39 f4       	brne	.+14     	; 0x3b4 <__addsf3+0x28>
 3a6:	9f 3f       	cpi	r25, 0xFF	; 255
 3a8:	19 f4       	brne	.+6      	; 0x3b0 <__addsf3+0x24>
 3aa:	26 f4       	brtc	.+8      	; 0x3b4 <__addsf3+0x28>
 3ac:	0c 94 d4 02 	jmp	0x5a8	; 0x5a8 <__fp_nan>
 3b0:	0e f4       	brtc	.+2      	; 0x3b4 <__addsf3+0x28>
 3b2:	e0 95       	com	r30
 3b4:	e7 fb       	bst	r30, 7
 3b6:	0c 94 ce 02 	jmp	0x59c	; 0x59c <__fp_inf>

000003ba <__addsf3x>:
 3ba:	e9 2f       	mov	r30, r25
 3bc:	0e 94 f6 02 	call	0x5ec	; 0x5ec <__fp_split3>
 3c0:	58 f3       	brcs	.-42     	; 0x398 <__addsf3+0xc>
 3c2:	ba 17       	cp	r27, r26
 3c4:	62 07       	cpc	r22, r18
 3c6:	73 07       	cpc	r23, r19
 3c8:	84 07       	cpc	r24, r20
 3ca:	95 07       	cpc	r25, r21
 3cc:	20 f0       	brcs	.+8      	; 0x3d6 <__addsf3x+0x1c>
 3ce:	79 f4       	brne	.+30     	; 0x3ee <__addsf3x+0x34>
 3d0:	a6 f5       	brtc	.+104    	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 3d2:	0c 94 18 03 	jmp	0x630	; 0x630 <__fp_zero>
 3d6:	0e f4       	brtc	.+2      	; 0x3da <__addsf3x+0x20>
 3d8:	e0 95       	com	r30
 3da:	0b 2e       	mov	r0, r27
 3dc:	ba 2f       	mov	r27, r26
 3de:	a0 2d       	mov	r26, r0
 3e0:	0b 01       	movw	r0, r22
 3e2:	b9 01       	movw	r22, r18
 3e4:	90 01       	movw	r18, r0
 3e6:	0c 01       	movw	r0, r24
 3e8:	ca 01       	movw	r24, r20
 3ea:	a0 01       	movw	r20, r0
 3ec:	11 24       	eor	r1, r1
 3ee:	ff 27       	eor	r31, r31
 3f0:	59 1b       	sub	r21, r25
 3f2:	99 f0       	breq	.+38     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 3f4:	59 3f       	cpi	r21, 0xF9	; 249
 3f6:	50 f4       	brcc	.+20     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 3f8:	50 3e       	cpi	r21, 0xE0	; 224
 3fa:	68 f1       	brcs	.+90     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 3fc:	1a 16       	cp	r1, r26
 3fe:	f0 40       	sbci	r31, 0x00	; 0
 400:	a2 2f       	mov	r26, r18
 402:	23 2f       	mov	r18, r19
 404:	34 2f       	mov	r19, r20
 406:	44 27       	eor	r20, r20
 408:	58 5f       	subi	r21, 0xF8	; 248
 40a:	f3 cf       	rjmp	.-26     	; 0x3f2 <__addsf3x+0x38>
 40c:	46 95       	lsr	r20
 40e:	37 95       	ror	r19
 410:	27 95       	ror	r18
 412:	a7 95       	ror	r26
 414:	f0 40       	sbci	r31, 0x00	; 0
 416:	53 95       	inc	r21
 418:	c9 f7       	brne	.-14     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 41a:	7e f4       	brtc	.+30     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 41c:	1f 16       	cp	r1, r31
 41e:	ba 0b       	sbc	r27, r26
 420:	62 0b       	sbc	r22, r18
 422:	73 0b       	sbc	r23, r19
 424:	84 0b       	sbc	r24, r20
 426:	ba f0       	brmi	.+46     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 428:	91 50       	subi	r25, 0x01	; 1
 42a:	a1 f0       	breq	.+40     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 42c:	ff 0f       	add	r31, r31
 42e:	bb 1f       	adc	r27, r27
 430:	66 1f       	adc	r22, r22
 432:	77 1f       	adc	r23, r23
 434:	88 1f       	adc	r24, r24
 436:	c2 f7       	brpl	.-16     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 438:	0e c0       	rjmp	.+28     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 43a:	ba 0f       	add	r27, r26
 43c:	62 1f       	adc	r22, r18
 43e:	73 1f       	adc	r23, r19
 440:	84 1f       	adc	r24, r20
 442:	48 f4       	brcc	.+18     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 444:	87 95       	ror	r24
 446:	77 95       	ror	r23
 448:	67 95       	ror	r22
 44a:	b7 95       	ror	r27
 44c:	f7 95       	ror	r31
 44e:	9e 3f       	cpi	r25, 0xFE	; 254
 450:	08 f0       	brcs	.+2      	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 452:	b0 cf       	rjmp	.-160    	; 0x3b4 <__addsf3+0x28>
 454:	93 95       	inc	r25
 456:	88 0f       	add	r24, r24
 458:	08 f0       	brcs	.+2      	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 45a:	99 27       	eor	r25, r25
 45c:	ee 0f       	add	r30, r30
 45e:	97 95       	ror	r25
 460:	87 95       	ror	r24
 462:	08 95       	ret

00000464 <__cmpsf2>:
 464:	0e 94 aa 02 	call	0x554	; 0x554 <__fp_cmp>
 468:	08 f4       	brcc	.+2      	; 0x46c <__cmpsf2+0x8>
 46a:	81 e0       	ldi	r24, 0x01	; 1
 46c:	08 95       	ret

0000046e <__fixsfsi>:
 46e:	0e 94 3e 02 	call	0x47c	; 0x47c <__fixunssfsi>
 472:	68 94       	set
 474:	b1 11       	cpse	r27, r1
 476:	0c 94 19 03 	jmp	0x632	; 0x632 <__fp_szero>
 47a:	08 95       	ret

0000047c <__fixunssfsi>:
 47c:	0e 94 fe 02 	call	0x5fc	; 0x5fc <__fp_splitA>
 480:	88 f0       	brcs	.+34     	; 0x4a4 <__fixunssfsi+0x28>
 482:	9f 57       	subi	r25, 0x7F	; 127
 484:	98 f0       	brcs	.+38     	; 0x4ac <__fixunssfsi+0x30>
 486:	b9 2f       	mov	r27, r25
 488:	99 27       	eor	r25, r25
 48a:	b7 51       	subi	r27, 0x17	; 23
 48c:	b0 f0       	brcs	.+44     	; 0x4ba <__fixunssfsi+0x3e>
 48e:	e1 f0       	breq	.+56     	; 0x4c8 <__fixunssfsi+0x4c>
 490:	66 0f       	add	r22, r22
 492:	77 1f       	adc	r23, r23
 494:	88 1f       	adc	r24, r24
 496:	99 1f       	adc	r25, r25
 498:	1a f0       	brmi	.+6      	; 0x4a0 <__fixunssfsi+0x24>
 49a:	ba 95       	dec	r27
 49c:	c9 f7       	brne	.-14     	; 0x490 <__fixunssfsi+0x14>
 49e:	14 c0       	rjmp	.+40     	; 0x4c8 <__fixunssfsi+0x4c>
 4a0:	b1 30       	cpi	r27, 0x01	; 1
 4a2:	91 f0       	breq	.+36     	; 0x4c8 <__fixunssfsi+0x4c>
 4a4:	0e 94 18 03 	call	0x630	; 0x630 <__fp_zero>
 4a8:	b1 e0       	ldi	r27, 0x01	; 1
 4aa:	08 95       	ret
 4ac:	0c 94 18 03 	jmp	0x630	; 0x630 <__fp_zero>
 4b0:	67 2f       	mov	r22, r23
 4b2:	78 2f       	mov	r23, r24
 4b4:	88 27       	eor	r24, r24
 4b6:	b8 5f       	subi	r27, 0xF8	; 248
 4b8:	39 f0       	breq	.+14     	; 0x4c8 <__fixunssfsi+0x4c>
 4ba:	b9 3f       	cpi	r27, 0xF9	; 249
 4bc:	cc f3       	brlt	.-14     	; 0x4b0 <__fixunssfsi+0x34>
 4be:	86 95       	lsr	r24
 4c0:	77 95       	ror	r23
 4c2:	67 95       	ror	r22
 4c4:	b3 95       	inc	r27
 4c6:	d9 f7       	brne	.-10     	; 0x4be <__fixunssfsi+0x42>
 4c8:	3e f4       	brtc	.+14     	; 0x4d8 <__fixunssfsi+0x5c>
 4ca:	90 95       	com	r25
 4cc:	80 95       	com	r24
 4ce:	70 95       	com	r23
 4d0:	61 95       	neg	r22
 4d2:	7f 4f       	sbci	r23, 0xFF	; 255
 4d4:	8f 4f       	sbci	r24, 0xFF	; 255
 4d6:	9f 4f       	sbci	r25, 0xFF	; 255
 4d8:	08 95       	ret

000004da <__floatunsisf>:
 4da:	e8 94       	clt
 4dc:	09 c0       	rjmp	.+18     	; 0x4f0 <__floatsisf+0x12>

000004de <__floatsisf>:
 4de:	97 fb       	bst	r25, 7
 4e0:	3e f4       	brtc	.+14     	; 0x4f0 <__floatsisf+0x12>
 4e2:	90 95       	com	r25
 4e4:	80 95       	com	r24
 4e6:	70 95       	com	r23
 4e8:	61 95       	neg	r22
 4ea:	7f 4f       	sbci	r23, 0xFF	; 255
 4ec:	8f 4f       	sbci	r24, 0xFF	; 255
 4ee:	9f 4f       	sbci	r25, 0xFF	; 255
 4f0:	99 23       	and	r25, r25
 4f2:	a9 f0       	breq	.+42     	; 0x51e <__floatsisf+0x40>
 4f4:	f9 2f       	mov	r31, r25
 4f6:	96 e9       	ldi	r25, 0x96	; 150
 4f8:	bb 27       	eor	r27, r27
 4fa:	93 95       	inc	r25
 4fc:	f6 95       	lsr	r31
 4fe:	87 95       	ror	r24
 500:	77 95       	ror	r23
 502:	67 95       	ror	r22
 504:	b7 95       	ror	r27
 506:	f1 11       	cpse	r31, r1
 508:	f8 cf       	rjmp	.-16     	; 0x4fa <__floatsisf+0x1c>
 50a:	fa f4       	brpl	.+62     	; 0x54a <__floatsisf+0x6c>
 50c:	bb 0f       	add	r27, r27
 50e:	11 f4       	brne	.+4      	; 0x514 <__floatsisf+0x36>
 510:	60 ff       	sbrs	r22, 0
 512:	1b c0       	rjmp	.+54     	; 0x54a <__floatsisf+0x6c>
 514:	6f 5f       	subi	r22, 0xFF	; 255
 516:	7f 4f       	sbci	r23, 0xFF	; 255
 518:	8f 4f       	sbci	r24, 0xFF	; 255
 51a:	9f 4f       	sbci	r25, 0xFF	; 255
 51c:	16 c0       	rjmp	.+44     	; 0x54a <__floatsisf+0x6c>
 51e:	88 23       	and	r24, r24
 520:	11 f0       	breq	.+4      	; 0x526 <__floatsisf+0x48>
 522:	96 e9       	ldi	r25, 0x96	; 150
 524:	11 c0       	rjmp	.+34     	; 0x548 <__floatsisf+0x6a>
 526:	77 23       	and	r23, r23
 528:	21 f0       	breq	.+8      	; 0x532 <__floatsisf+0x54>
 52a:	9e e8       	ldi	r25, 0x8E	; 142
 52c:	87 2f       	mov	r24, r23
 52e:	76 2f       	mov	r23, r22
 530:	05 c0       	rjmp	.+10     	; 0x53c <__floatsisf+0x5e>
 532:	66 23       	and	r22, r22
 534:	71 f0       	breq	.+28     	; 0x552 <__floatsisf+0x74>
 536:	96 e8       	ldi	r25, 0x86	; 134
 538:	86 2f       	mov	r24, r22
 53a:	70 e0       	ldi	r23, 0x00	; 0
 53c:	60 e0       	ldi	r22, 0x00	; 0
 53e:	2a f0       	brmi	.+10     	; 0x54a <__floatsisf+0x6c>
 540:	9a 95       	dec	r25
 542:	66 0f       	add	r22, r22
 544:	77 1f       	adc	r23, r23
 546:	88 1f       	adc	r24, r24
 548:	da f7       	brpl	.-10     	; 0x540 <__floatsisf+0x62>
 54a:	88 0f       	add	r24, r24
 54c:	96 95       	lsr	r25
 54e:	87 95       	ror	r24
 550:	97 f9       	bld	r25, 7
 552:	08 95       	ret

00000554 <__fp_cmp>:
 554:	99 0f       	add	r25, r25
 556:	00 08       	sbc	r0, r0
 558:	55 0f       	add	r21, r21
 55a:	aa 0b       	sbc	r26, r26
 55c:	e0 e8       	ldi	r30, 0x80	; 128
 55e:	fe ef       	ldi	r31, 0xFE	; 254
 560:	16 16       	cp	r1, r22
 562:	17 06       	cpc	r1, r23
 564:	e8 07       	cpc	r30, r24
 566:	f9 07       	cpc	r31, r25
 568:	c0 f0       	brcs	.+48     	; 0x59a <__fp_cmp+0x46>
 56a:	12 16       	cp	r1, r18
 56c:	13 06       	cpc	r1, r19
 56e:	e4 07       	cpc	r30, r20
 570:	f5 07       	cpc	r31, r21
 572:	98 f0       	brcs	.+38     	; 0x59a <__fp_cmp+0x46>
 574:	62 1b       	sub	r22, r18
 576:	73 0b       	sbc	r23, r19
 578:	84 0b       	sbc	r24, r20
 57a:	95 0b       	sbc	r25, r21
 57c:	39 f4       	brne	.+14     	; 0x58c <__fp_cmp+0x38>
 57e:	0a 26       	eor	r0, r26
 580:	61 f0       	breq	.+24     	; 0x59a <__fp_cmp+0x46>
 582:	23 2b       	or	r18, r19
 584:	24 2b       	or	r18, r20
 586:	25 2b       	or	r18, r21
 588:	21 f4       	brne	.+8      	; 0x592 <__fp_cmp+0x3e>
 58a:	08 95       	ret
 58c:	0a 26       	eor	r0, r26
 58e:	09 f4       	brne	.+2      	; 0x592 <__fp_cmp+0x3e>
 590:	a1 40       	sbci	r26, 0x01	; 1
 592:	a6 95       	lsr	r26
 594:	8f ef       	ldi	r24, 0xFF	; 255
 596:	81 1d       	adc	r24, r1
 598:	81 1d       	adc	r24, r1
 59a:	08 95       	ret

0000059c <__fp_inf>:
 59c:	97 f9       	bld	r25, 7
 59e:	9f 67       	ori	r25, 0x7F	; 127
 5a0:	80 e8       	ldi	r24, 0x80	; 128
 5a2:	70 e0       	ldi	r23, 0x00	; 0
 5a4:	60 e0       	ldi	r22, 0x00	; 0
 5a6:	08 95       	ret

000005a8 <__fp_nan>:
 5a8:	9f ef       	ldi	r25, 0xFF	; 255
 5aa:	80 ec       	ldi	r24, 0xC0	; 192
 5ac:	08 95       	ret

000005ae <__fp_pscA>:
 5ae:	00 24       	eor	r0, r0
 5b0:	0a 94       	dec	r0
 5b2:	16 16       	cp	r1, r22
 5b4:	17 06       	cpc	r1, r23
 5b6:	18 06       	cpc	r1, r24
 5b8:	09 06       	cpc	r0, r25
 5ba:	08 95       	ret

000005bc <__fp_pscB>:
 5bc:	00 24       	eor	r0, r0
 5be:	0a 94       	dec	r0
 5c0:	12 16       	cp	r1, r18
 5c2:	13 06       	cpc	r1, r19
 5c4:	14 06       	cpc	r1, r20
 5c6:	05 06       	cpc	r0, r21
 5c8:	08 95       	ret

000005ca <__fp_round>:
 5ca:	09 2e       	mov	r0, r25
 5cc:	03 94       	inc	r0
 5ce:	00 0c       	add	r0, r0
 5d0:	11 f4       	brne	.+4      	; 0x5d6 <__fp_round+0xc>
 5d2:	88 23       	and	r24, r24
 5d4:	52 f0       	brmi	.+20     	; 0x5ea <__fp_round+0x20>
 5d6:	bb 0f       	add	r27, r27
 5d8:	40 f4       	brcc	.+16     	; 0x5ea <__fp_round+0x20>
 5da:	bf 2b       	or	r27, r31
 5dc:	11 f4       	brne	.+4      	; 0x5e2 <__fp_round+0x18>
 5de:	60 ff       	sbrs	r22, 0
 5e0:	04 c0       	rjmp	.+8      	; 0x5ea <__fp_round+0x20>
 5e2:	6f 5f       	subi	r22, 0xFF	; 255
 5e4:	7f 4f       	sbci	r23, 0xFF	; 255
 5e6:	8f 4f       	sbci	r24, 0xFF	; 255
 5e8:	9f 4f       	sbci	r25, 0xFF	; 255
 5ea:	08 95       	ret

000005ec <__fp_split3>:
 5ec:	57 fd       	sbrc	r21, 7
 5ee:	90 58       	subi	r25, 0x80	; 128
 5f0:	44 0f       	add	r20, r20
 5f2:	55 1f       	adc	r21, r21
 5f4:	59 f0       	breq	.+22     	; 0x60c <__fp_splitA+0x10>
 5f6:	5f 3f       	cpi	r21, 0xFF	; 255
 5f8:	71 f0       	breq	.+28     	; 0x616 <__fp_splitA+0x1a>
 5fa:	47 95       	ror	r20

000005fc <__fp_splitA>:
 5fc:	88 0f       	add	r24, r24
 5fe:	97 fb       	bst	r25, 7
 600:	99 1f       	adc	r25, r25
 602:	61 f0       	breq	.+24     	; 0x61c <__fp_splitA+0x20>
 604:	9f 3f       	cpi	r25, 0xFF	; 255
 606:	79 f0       	breq	.+30     	; 0x626 <__fp_splitA+0x2a>
 608:	87 95       	ror	r24
 60a:	08 95       	ret
 60c:	12 16       	cp	r1, r18
 60e:	13 06       	cpc	r1, r19
 610:	14 06       	cpc	r1, r20
 612:	55 1f       	adc	r21, r21
 614:	f2 cf       	rjmp	.-28     	; 0x5fa <__fp_split3+0xe>
 616:	46 95       	lsr	r20
 618:	f1 df       	rcall	.-30     	; 0x5fc <__fp_splitA>
 61a:	08 c0       	rjmp	.+16     	; 0x62c <__fp_splitA+0x30>
 61c:	16 16       	cp	r1, r22
 61e:	17 06       	cpc	r1, r23
 620:	18 06       	cpc	r1, r24
 622:	99 1f       	adc	r25, r25
 624:	f1 cf       	rjmp	.-30     	; 0x608 <__fp_splitA+0xc>
 626:	86 95       	lsr	r24
 628:	71 05       	cpc	r23, r1
 62a:	61 05       	cpc	r22, r1
 62c:	08 94       	sec
 62e:	08 95       	ret

00000630 <__fp_zero>:
 630:	e8 94       	clt

00000632 <__fp_szero>:
 632:	bb 27       	eor	r27, r27
 634:	66 27       	eor	r22, r22
 636:	77 27       	eor	r23, r23
 638:	cb 01       	movw	r24, r22
 63a:	97 f9       	bld	r25, 7
 63c:	08 95       	ret

0000063e <__mulsf3>:
 63e:	0e 94 32 03 	call	0x664	; 0x664 <__mulsf3x>
 642:	0c 94 e5 02 	jmp	0x5ca	; 0x5ca <__fp_round>
 646:	0e 94 d7 02 	call	0x5ae	; 0x5ae <__fp_pscA>
 64a:	38 f0       	brcs	.+14     	; 0x65a <__mulsf3+0x1c>
 64c:	0e 94 de 02 	call	0x5bc	; 0x5bc <__fp_pscB>
 650:	20 f0       	brcs	.+8      	; 0x65a <__mulsf3+0x1c>
 652:	95 23       	and	r25, r21
 654:	11 f0       	breq	.+4      	; 0x65a <__mulsf3+0x1c>
 656:	0c 94 ce 02 	jmp	0x59c	; 0x59c <__fp_inf>
 65a:	0c 94 d4 02 	jmp	0x5a8	; 0x5a8 <__fp_nan>
 65e:	11 24       	eor	r1, r1
 660:	0c 94 19 03 	jmp	0x632	; 0x632 <__fp_szero>

00000664 <__mulsf3x>:
 664:	0e 94 f6 02 	call	0x5ec	; 0x5ec <__fp_split3>
 668:	70 f3       	brcs	.-36     	; 0x646 <__mulsf3+0x8>

0000066a <__mulsf3_pse>:
 66a:	95 9f       	mul	r25, r21
 66c:	c1 f3       	breq	.-16     	; 0x65e <__mulsf3+0x20>
 66e:	95 0f       	add	r25, r21
 670:	50 e0       	ldi	r21, 0x00	; 0
 672:	55 1f       	adc	r21, r21
 674:	62 9f       	mul	r22, r18
 676:	f0 01       	movw	r30, r0
 678:	72 9f       	mul	r23, r18
 67a:	bb 27       	eor	r27, r27
 67c:	f0 0d       	add	r31, r0
 67e:	b1 1d       	adc	r27, r1
 680:	63 9f       	mul	r22, r19
 682:	aa 27       	eor	r26, r26
 684:	f0 0d       	add	r31, r0
 686:	b1 1d       	adc	r27, r1
 688:	aa 1f       	adc	r26, r26
 68a:	64 9f       	mul	r22, r20
 68c:	66 27       	eor	r22, r22
 68e:	b0 0d       	add	r27, r0
 690:	a1 1d       	adc	r26, r1
 692:	66 1f       	adc	r22, r22
 694:	82 9f       	mul	r24, r18
 696:	22 27       	eor	r18, r18
 698:	b0 0d       	add	r27, r0
 69a:	a1 1d       	adc	r26, r1
 69c:	62 1f       	adc	r22, r18
 69e:	73 9f       	mul	r23, r19
 6a0:	b0 0d       	add	r27, r0
 6a2:	a1 1d       	adc	r26, r1
 6a4:	62 1f       	adc	r22, r18
 6a6:	83 9f       	mul	r24, r19
 6a8:	a0 0d       	add	r26, r0
 6aa:	61 1d       	adc	r22, r1
 6ac:	22 1f       	adc	r18, r18
 6ae:	74 9f       	mul	r23, r20
 6b0:	33 27       	eor	r19, r19
 6b2:	a0 0d       	add	r26, r0
 6b4:	61 1d       	adc	r22, r1
 6b6:	23 1f       	adc	r18, r19
 6b8:	84 9f       	mul	r24, r20
 6ba:	60 0d       	add	r22, r0
 6bc:	21 1d       	adc	r18, r1
 6be:	82 2f       	mov	r24, r18
 6c0:	76 2f       	mov	r23, r22
 6c2:	6a 2f       	mov	r22, r26
 6c4:	11 24       	eor	r1, r1
 6c6:	9f 57       	subi	r25, 0x7F	; 127
 6c8:	50 40       	sbci	r21, 0x00	; 0
 6ca:	9a f0       	brmi	.+38     	; 0x6f2 <__mulsf3_pse+0x88>
 6cc:	f1 f0       	breq	.+60     	; 0x70a <__mulsf3_pse+0xa0>
 6ce:	88 23       	and	r24, r24
 6d0:	4a f0       	brmi	.+18     	; 0x6e4 <__mulsf3_pse+0x7a>
 6d2:	ee 0f       	add	r30, r30
 6d4:	ff 1f       	adc	r31, r31
 6d6:	bb 1f       	adc	r27, r27
 6d8:	66 1f       	adc	r22, r22
 6da:	77 1f       	adc	r23, r23
 6dc:	88 1f       	adc	r24, r24
 6de:	91 50       	subi	r25, 0x01	; 1
 6e0:	50 40       	sbci	r21, 0x00	; 0
 6e2:	a9 f7       	brne	.-22     	; 0x6ce <__mulsf3_pse+0x64>
 6e4:	9e 3f       	cpi	r25, 0xFE	; 254
 6e6:	51 05       	cpc	r21, r1
 6e8:	80 f0       	brcs	.+32     	; 0x70a <__mulsf3_pse+0xa0>
 6ea:	0c 94 ce 02 	jmp	0x59c	; 0x59c <__fp_inf>
 6ee:	0c 94 19 03 	jmp	0x632	; 0x632 <__fp_szero>
 6f2:	5f 3f       	cpi	r21, 0xFF	; 255
 6f4:	e4 f3       	brlt	.-8      	; 0x6ee <__mulsf3_pse+0x84>
 6f6:	98 3e       	cpi	r25, 0xE8	; 232
 6f8:	d4 f3       	brlt	.-12     	; 0x6ee <__mulsf3_pse+0x84>
 6fa:	86 95       	lsr	r24
 6fc:	77 95       	ror	r23
 6fe:	67 95       	ror	r22
 700:	b7 95       	ror	r27
 702:	f7 95       	ror	r31
 704:	e7 95       	ror	r30
 706:	9f 5f       	subi	r25, 0xFF	; 255
 708:	c1 f7       	brne	.-16     	; 0x6fa <__mulsf3_pse+0x90>
 70a:	fe 2b       	or	r31, r30
 70c:	88 0f       	add	r24, r24
 70e:	91 1d       	adc	r25, r1
 710:	96 95       	lsr	r25
 712:	87 95       	ror	r24
 714:	97 f9       	bld	r25, 7
 716:	08 95       	ret

00000718 <trunc>:
 718:	0e 94 c0 03 	call	0x780	; 0x780 <__fp_trunc>
 71c:	30 f0       	brcs	.+12     	; 0x72a <trunc+0x12>
 71e:	9f 37       	cpi	r25, 0x7F	; 127
 720:	10 f4       	brcc	.+4      	; 0x726 <trunc+0xe>
 722:	0c 94 19 03 	jmp	0x632	; 0x632 <__fp_szero>
 726:	0c 94 97 03 	jmp	0x72e	; 0x72e <__fp_mintl>
 72a:	0c 94 b2 03 	jmp	0x764	; 0x764 <__fp_mpack>

0000072e <__fp_mintl>:
 72e:	88 23       	and	r24, r24
 730:	71 f4       	brne	.+28     	; 0x74e <__fp_mintl+0x20>
 732:	77 23       	and	r23, r23
 734:	21 f0       	breq	.+8      	; 0x73e <__fp_mintl+0x10>
 736:	98 50       	subi	r25, 0x08	; 8
 738:	87 2b       	or	r24, r23
 73a:	76 2f       	mov	r23, r22
 73c:	07 c0       	rjmp	.+14     	; 0x74c <__fp_mintl+0x1e>
 73e:	66 23       	and	r22, r22
 740:	11 f4       	brne	.+4      	; 0x746 <__fp_mintl+0x18>
 742:	99 27       	eor	r25, r25
 744:	0d c0       	rjmp	.+26     	; 0x760 <__fp_mintl+0x32>
 746:	90 51       	subi	r25, 0x10	; 16
 748:	86 2b       	or	r24, r22
 74a:	70 e0       	ldi	r23, 0x00	; 0
 74c:	60 e0       	ldi	r22, 0x00	; 0
 74e:	2a f0       	brmi	.+10     	; 0x75a <__fp_mintl+0x2c>
 750:	9a 95       	dec	r25
 752:	66 0f       	add	r22, r22
 754:	77 1f       	adc	r23, r23
 756:	88 1f       	adc	r24, r24
 758:	da f7       	brpl	.-10     	; 0x750 <__fp_mintl+0x22>
 75a:	88 0f       	add	r24, r24
 75c:	96 95       	lsr	r25
 75e:	87 95       	ror	r24
 760:	97 f9       	bld	r25, 7
 762:	08 95       	ret

00000764 <__fp_mpack>:
 764:	9f 3f       	cpi	r25, 0xFF	; 255
 766:	31 f0       	breq	.+12     	; 0x774 <__fp_mpack_finite+0xc>

00000768 <__fp_mpack_finite>:
 768:	91 50       	subi	r25, 0x01	; 1
 76a:	20 f4       	brcc	.+8      	; 0x774 <__fp_mpack_finite+0xc>
 76c:	87 95       	ror	r24
 76e:	77 95       	ror	r23
 770:	67 95       	ror	r22
 772:	b7 95       	ror	r27
 774:	88 0f       	add	r24, r24
 776:	91 1d       	adc	r25, r1
 778:	96 95       	lsr	r25
 77a:	87 95       	ror	r24
 77c:	97 f9       	bld	r25, 7
 77e:	08 95       	ret

00000780 <__fp_trunc>:
 780:	0e 94 fe 02 	call	0x5fc	; 0x5fc <__fp_splitA>
 784:	a0 f0       	brcs	.+40     	; 0x7ae <__fp_trunc+0x2e>
 786:	be e7       	ldi	r27, 0x7E	; 126
 788:	b9 17       	cp	r27, r25
 78a:	88 f4       	brcc	.+34     	; 0x7ae <__fp_trunc+0x2e>
 78c:	bb 27       	eor	r27, r27
 78e:	9f 38       	cpi	r25, 0x8F	; 143
 790:	60 f4       	brcc	.+24     	; 0x7aa <__fp_trunc+0x2a>
 792:	16 16       	cp	r1, r22
 794:	b1 1d       	adc	r27, r1
 796:	67 2f       	mov	r22, r23
 798:	78 2f       	mov	r23, r24
 79a:	88 27       	eor	r24, r24
 79c:	98 5f       	subi	r25, 0xF8	; 248
 79e:	f7 cf       	rjmp	.-18     	; 0x78e <__fp_trunc+0xe>
 7a0:	86 95       	lsr	r24
 7a2:	77 95       	ror	r23
 7a4:	67 95       	ror	r22
 7a6:	b1 1d       	adc	r27, r1
 7a8:	93 95       	inc	r25
 7aa:	96 39       	cpi	r25, 0x96	; 150
 7ac:	c8 f3       	brcs	.-14     	; 0x7a0 <__fp_trunc+0x20>
 7ae:	08 95       	ret

000007b0 <sprintf>:
 7b0:	ae e0       	ldi	r26, 0x0E	; 14
 7b2:	b0 e0       	ldi	r27, 0x00	; 0
 7b4:	ee ed       	ldi	r30, 0xDE	; 222
 7b6:	f3 e0       	ldi	r31, 0x03	; 3
 7b8:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__prologue_saves__+0x1c>
 7bc:	0d 89       	ldd	r16, Y+21	; 0x15
 7be:	1e 89       	ldd	r17, Y+22	; 0x16
 7c0:	86 e0       	ldi	r24, 0x06	; 6
 7c2:	8c 83       	std	Y+4, r24	; 0x04
 7c4:	1a 83       	std	Y+2, r17	; 0x02
 7c6:	09 83       	std	Y+1, r16	; 0x01
 7c8:	8f ef       	ldi	r24, 0xFF	; 255
 7ca:	9f e7       	ldi	r25, 0x7F	; 127
 7cc:	9e 83       	std	Y+6, r25	; 0x06
 7ce:	8d 83       	std	Y+5, r24	; 0x05
 7d0:	ae 01       	movw	r20, r28
 7d2:	47 5e       	subi	r20, 0xE7	; 231
 7d4:	5f 4f       	sbci	r21, 0xFF	; 255
 7d6:	6f 89       	ldd	r22, Y+23	; 0x17
 7d8:	78 8d       	ldd	r23, Y+24	; 0x18
 7da:	ce 01       	movw	r24, r28
 7dc:	01 96       	adiw	r24, 0x01	; 1
 7de:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <vfprintf>
 7e2:	ef 81       	ldd	r30, Y+7	; 0x07
 7e4:	f8 85       	ldd	r31, Y+8	; 0x08
 7e6:	e0 0f       	add	r30, r16
 7e8:	f1 1f       	adc	r31, r17
 7ea:	10 82       	st	Z, r1
 7ec:	2e 96       	adiw	r28, 0x0e	; 14
 7ee:	e4 e0       	ldi	r30, 0x04	; 4
 7f0:	0c 94 b5 06 	jmp	0xd6a	; 0xd6a <__epilogue_restores__+0x1c>

000007f4 <vfprintf>:
 7f4:	ab e0       	ldi	r26, 0x0B	; 11
 7f6:	b0 e0       	ldi	r27, 0x00	; 0
 7f8:	e0 e0       	ldi	r30, 0x00	; 0
 7fa:	f4 e0       	ldi	r31, 0x04	; 4
 7fc:	0c 94 8b 06 	jmp	0xd16	; 0xd16 <__prologue_saves__>
 800:	6c 01       	movw	r12, r24
 802:	7b 01       	movw	r14, r22
 804:	8a 01       	movw	r16, r20
 806:	fc 01       	movw	r30, r24
 808:	17 82       	std	Z+7, r1	; 0x07
 80a:	16 82       	std	Z+6, r1	; 0x06
 80c:	83 81       	ldd	r24, Z+3	; 0x03
 80e:	81 ff       	sbrs	r24, 1
 810:	cc c1       	rjmp	.+920    	; 0xbaa <__stack+0x34b>
 812:	ce 01       	movw	r24, r28
 814:	01 96       	adiw	r24, 0x01	; 1
 816:	3c 01       	movw	r6, r24
 818:	f6 01       	movw	r30, r12
 81a:	93 81       	ldd	r25, Z+3	; 0x03
 81c:	f7 01       	movw	r30, r14
 81e:	93 fd       	sbrc	r25, 3
 820:	85 91       	lpm	r24, Z+
 822:	93 ff       	sbrs	r25, 3
 824:	81 91       	ld	r24, Z+
 826:	7f 01       	movw	r14, r30
 828:	88 23       	and	r24, r24
 82a:	09 f4       	brne	.+2      	; 0x82e <vfprintf+0x3a>
 82c:	ba c1       	rjmp	.+884    	; 0xba2 <__stack+0x343>
 82e:	85 32       	cpi	r24, 0x25	; 37
 830:	39 f4       	brne	.+14     	; 0x840 <vfprintf+0x4c>
 832:	93 fd       	sbrc	r25, 3
 834:	85 91       	lpm	r24, Z+
 836:	93 ff       	sbrs	r25, 3
 838:	81 91       	ld	r24, Z+
 83a:	7f 01       	movw	r14, r30
 83c:	85 32       	cpi	r24, 0x25	; 37
 83e:	29 f4       	brne	.+10     	; 0x84a <vfprintf+0x56>
 840:	b6 01       	movw	r22, r12
 842:	90 e0       	ldi	r25, 0x00	; 0
 844:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <fputc>
 848:	e7 cf       	rjmp	.-50     	; 0x818 <vfprintf+0x24>
 84a:	91 2c       	mov	r9, r1
 84c:	21 2c       	mov	r2, r1
 84e:	31 2c       	mov	r3, r1
 850:	ff e1       	ldi	r31, 0x1F	; 31
 852:	f3 15       	cp	r31, r3
 854:	d8 f0       	brcs	.+54     	; 0x88c <__stack+0x2d>
 856:	8b 32       	cpi	r24, 0x2B	; 43
 858:	79 f0       	breq	.+30     	; 0x878 <__stack+0x19>
 85a:	38 f4       	brcc	.+14     	; 0x86a <__stack+0xb>
 85c:	80 32       	cpi	r24, 0x20	; 32
 85e:	79 f0       	breq	.+30     	; 0x87e <__stack+0x1f>
 860:	83 32       	cpi	r24, 0x23	; 35
 862:	a1 f4       	brne	.+40     	; 0x88c <__stack+0x2d>
 864:	23 2d       	mov	r18, r3
 866:	20 61       	ori	r18, 0x10	; 16
 868:	1d c0       	rjmp	.+58     	; 0x8a4 <__stack+0x45>
 86a:	8d 32       	cpi	r24, 0x2D	; 45
 86c:	61 f0       	breq	.+24     	; 0x886 <__stack+0x27>
 86e:	80 33       	cpi	r24, 0x30	; 48
 870:	69 f4       	brne	.+26     	; 0x88c <__stack+0x2d>
 872:	23 2d       	mov	r18, r3
 874:	21 60       	ori	r18, 0x01	; 1
 876:	16 c0       	rjmp	.+44     	; 0x8a4 <__stack+0x45>
 878:	83 2d       	mov	r24, r3
 87a:	82 60       	ori	r24, 0x02	; 2
 87c:	38 2e       	mov	r3, r24
 87e:	e3 2d       	mov	r30, r3
 880:	e4 60       	ori	r30, 0x04	; 4
 882:	3e 2e       	mov	r3, r30
 884:	2a c0       	rjmp	.+84     	; 0x8da <__stack+0x7b>
 886:	f3 2d       	mov	r31, r3
 888:	f8 60       	ori	r31, 0x08	; 8
 88a:	1d c0       	rjmp	.+58     	; 0x8c6 <__stack+0x67>
 88c:	37 fc       	sbrc	r3, 7
 88e:	2d c0       	rjmp	.+90     	; 0x8ea <__stack+0x8b>
 890:	20 ed       	ldi	r18, 0xD0	; 208
 892:	28 0f       	add	r18, r24
 894:	2a 30       	cpi	r18, 0x0A	; 10
 896:	40 f0       	brcs	.+16     	; 0x8a8 <__stack+0x49>
 898:	8e 32       	cpi	r24, 0x2E	; 46
 89a:	b9 f4       	brne	.+46     	; 0x8ca <__stack+0x6b>
 89c:	36 fc       	sbrc	r3, 6
 89e:	81 c1       	rjmp	.+770    	; 0xba2 <__stack+0x343>
 8a0:	23 2d       	mov	r18, r3
 8a2:	20 64       	ori	r18, 0x40	; 64
 8a4:	32 2e       	mov	r3, r18
 8a6:	19 c0       	rjmp	.+50     	; 0x8da <__stack+0x7b>
 8a8:	36 fe       	sbrs	r3, 6
 8aa:	06 c0       	rjmp	.+12     	; 0x8b8 <__stack+0x59>
 8ac:	8a e0       	ldi	r24, 0x0A	; 10
 8ae:	98 9e       	mul	r9, r24
 8b0:	20 0d       	add	r18, r0
 8b2:	11 24       	eor	r1, r1
 8b4:	92 2e       	mov	r9, r18
 8b6:	11 c0       	rjmp	.+34     	; 0x8da <__stack+0x7b>
 8b8:	ea e0       	ldi	r30, 0x0A	; 10
 8ba:	2e 9e       	mul	r2, r30
 8bc:	20 0d       	add	r18, r0
 8be:	11 24       	eor	r1, r1
 8c0:	22 2e       	mov	r2, r18
 8c2:	f3 2d       	mov	r31, r3
 8c4:	f0 62       	ori	r31, 0x20	; 32
 8c6:	3f 2e       	mov	r3, r31
 8c8:	08 c0       	rjmp	.+16     	; 0x8da <__stack+0x7b>
 8ca:	8c 36       	cpi	r24, 0x6C	; 108
 8cc:	21 f4       	brne	.+8      	; 0x8d6 <__stack+0x77>
 8ce:	83 2d       	mov	r24, r3
 8d0:	80 68       	ori	r24, 0x80	; 128
 8d2:	38 2e       	mov	r3, r24
 8d4:	02 c0       	rjmp	.+4      	; 0x8da <__stack+0x7b>
 8d6:	88 36       	cpi	r24, 0x68	; 104
 8d8:	41 f4       	brne	.+16     	; 0x8ea <__stack+0x8b>
 8da:	f7 01       	movw	r30, r14
 8dc:	93 fd       	sbrc	r25, 3
 8de:	85 91       	lpm	r24, Z+
 8e0:	93 ff       	sbrs	r25, 3
 8e2:	81 91       	ld	r24, Z+
 8e4:	7f 01       	movw	r14, r30
 8e6:	81 11       	cpse	r24, r1
 8e8:	b3 cf       	rjmp	.-154    	; 0x850 <vfprintf+0x5c>
 8ea:	98 2f       	mov	r25, r24
 8ec:	9f 7d       	andi	r25, 0xDF	; 223
 8ee:	95 54       	subi	r25, 0x45	; 69
 8f0:	93 30       	cpi	r25, 0x03	; 3
 8f2:	28 f4       	brcc	.+10     	; 0x8fe <__stack+0x9f>
 8f4:	0c 5f       	subi	r16, 0xFC	; 252
 8f6:	1f 4f       	sbci	r17, 0xFF	; 255
 8f8:	9f e3       	ldi	r25, 0x3F	; 63
 8fa:	99 83       	std	Y+1, r25	; 0x01
 8fc:	0d c0       	rjmp	.+26     	; 0x918 <__stack+0xb9>
 8fe:	83 36       	cpi	r24, 0x63	; 99
 900:	31 f0       	breq	.+12     	; 0x90e <__stack+0xaf>
 902:	83 37       	cpi	r24, 0x73	; 115
 904:	71 f0       	breq	.+28     	; 0x922 <__stack+0xc3>
 906:	83 35       	cpi	r24, 0x53	; 83
 908:	09 f0       	breq	.+2      	; 0x90c <__stack+0xad>
 90a:	59 c0       	rjmp	.+178    	; 0x9be <__stack+0x15f>
 90c:	21 c0       	rjmp	.+66     	; 0x950 <__stack+0xf1>
 90e:	f8 01       	movw	r30, r16
 910:	80 81       	ld	r24, Z
 912:	89 83       	std	Y+1, r24	; 0x01
 914:	0e 5f       	subi	r16, 0xFE	; 254
 916:	1f 4f       	sbci	r17, 0xFF	; 255
 918:	88 24       	eor	r8, r8
 91a:	83 94       	inc	r8
 91c:	91 2c       	mov	r9, r1
 91e:	53 01       	movw	r10, r6
 920:	13 c0       	rjmp	.+38     	; 0x948 <__stack+0xe9>
 922:	28 01       	movw	r4, r16
 924:	f2 e0       	ldi	r31, 0x02	; 2
 926:	4f 0e       	add	r4, r31
 928:	51 1c       	adc	r5, r1
 92a:	f8 01       	movw	r30, r16
 92c:	a0 80       	ld	r10, Z
 92e:	b1 80       	ldd	r11, Z+1	; 0x01
 930:	36 fe       	sbrs	r3, 6
 932:	03 c0       	rjmp	.+6      	; 0x93a <__stack+0xdb>
 934:	69 2d       	mov	r22, r9
 936:	70 e0       	ldi	r23, 0x00	; 0
 938:	02 c0       	rjmp	.+4      	; 0x93e <__stack+0xdf>
 93a:	6f ef       	ldi	r22, 0xFF	; 255
 93c:	7f ef       	ldi	r23, 0xFF	; 255
 93e:	c5 01       	movw	r24, r10
 940:	0e 94 e6 05 	call	0xbcc	; 0xbcc <strnlen>
 944:	4c 01       	movw	r8, r24
 946:	82 01       	movw	r16, r4
 948:	f3 2d       	mov	r31, r3
 94a:	ff 77       	andi	r31, 0x7F	; 127
 94c:	3f 2e       	mov	r3, r31
 94e:	16 c0       	rjmp	.+44     	; 0x97c <__stack+0x11d>
 950:	28 01       	movw	r4, r16
 952:	22 e0       	ldi	r18, 0x02	; 2
 954:	42 0e       	add	r4, r18
 956:	51 1c       	adc	r5, r1
 958:	f8 01       	movw	r30, r16
 95a:	a0 80       	ld	r10, Z
 95c:	b1 80       	ldd	r11, Z+1	; 0x01
 95e:	36 fe       	sbrs	r3, 6
 960:	03 c0       	rjmp	.+6      	; 0x968 <__stack+0x109>
 962:	69 2d       	mov	r22, r9
 964:	70 e0       	ldi	r23, 0x00	; 0
 966:	02 c0       	rjmp	.+4      	; 0x96c <__stack+0x10d>
 968:	6f ef       	ldi	r22, 0xFF	; 255
 96a:	7f ef       	ldi	r23, 0xFF	; 255
 96c:	c5 01       	movw	r24, r10
 96e:	0e 94 db 05 	call	0xbb6	; 0xbb6 <strnlen_P>
 972:	4c 01       	movw	r8, r24
 974:	f3 2d       	mov	r31, r3
 976:	f0 68       	ori	r31, 0x80	; 128
 978:	3f 2e       	mov	r3, r31
 97a:	82 01       	movw	r16, r4
 97c:	33 fc       	sbrc	r3, 3
 97e:	1b c0       	rjmp	.+54     	; 0x9b6 <__stack+0x157>
 980:	82 2d       	mov	r24, r2
 982:	90 e0       	ldi	r25, 0x00	; 0
 984:	88 16       	cp	r8, r24
 986:	99 06       	cpc	r9, r25
 988:	b0 f4       	brcc	.+44     	; 0x9b6 <__stack+0x157>
 98a:	b6 01       	movw	r22, r12
 98c:	80 e2       	ldi	r24, 0x20	; 32
 98e:	90 e0       	ldi	r25, 0x00	; 0
 990:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <fputc>
 994:	2a 94       	dec	r2
 996:	f4 cf       	rjmp	.-24     	; 0x980 <__stack+0x121>
 998:	f5 01       	movw	r30, r10
 99a:	37 fc       	sbrc	r3, 7
 99c:	85 91       	lpm	r24, Z+
 99e:	37 fe       	sbrs	r3, 7
 9a0:	81 91       	ld	r24, Z+
 9a2:	5f 01       	movw	r10, r30
 9a4:	b6 01       	movw	r22, r12
 9a6:	90 e0       	ldi	r25, 0x00	; 0
 9a8:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <fputc>
 9ac:	21 10       	cpse	r2, r1
 9ae:	2a 94       	dec	r2
 9b0:	21 e0       	ldi	r18, 0x01	; 1
 9b2:	82 1a       	sub	r8, r18
 9b4:	91 08       	sbc	r9, r1
 9b6:	81 14       	cp	r8, r1
 9b8:	91 04       	cpc	r9, r1
 9ba:	71 f7       	brne	.-36     	; 0x998 <__stack+0x139>
 9bc:	e8 c0       	rjmp	.+464    	; 0xb8e <__stack+0x32f>
 9be:	84 36       	cpi	r24, 0x64	; 100
 9c0:	11 f0       	breq	.+4      	; 0x9c6 <__stack+0x167>
 9c2:	89 36       	cpi	r24, 0x69	; 105
 9c4:	41 f5       	brne	.+80     	; 0xa16 <__stack+0x1b7>
 9c6:	f8 01       	movw	r30, r16
 9c8:	37 fe       	sbrs	r3, 7
 9ca:	07 c0       	rjmp	.+14     	; 0x9da <__stack+0x17b>
 9cc:	60 81       	ld	r22, Z
 9ce:	71 81       	ldd	r23, Z+1	; 0x01
 9d0:	82 81       	ldd	r24, Z+2	; 0x02
 9d2:	93 81       	ldd	r25, Z+3	; 0x03
 9d4:	0c 5f       	subi	r16, 0xFC	; 252
 9d6:	1f 4f       	sbci	r17, 0xFF	; 255
 9d8:	08 c0       	rjmp	.+16     	; 0x9ea <__stack+0x18b>
 9da:	60 81       	ld	r22, Z
 9dc:	71 81       	ldd	r23, Z+1	; 0x01
 9de:	07 2e       	mov	r0, r23
 9e0:	00 0c       	add	r0, r0
 9e2:	88 0b       	sbc	r24, r24
 9e4:	99 0b       	sbc	r25, r25
 9e6:	0e 5f       	subi	r16, 0xFE	; 254
 9e8:	1f 4f       	sbci	r17, 0xFF	; 255
 9ea:	f3 2d       	mov	r31, r3
 9ec:	ff 76       	andi	r31, 0x6F	; 111
 9ee:	3f 2e       	mov	r3, r31
 9f0:	97 ff       	sbrs	r25, 7
 9f2:	09 c0       	rjmp	.+18     	; 0xa06 <__stack+0x1a7>
 9f4:	90 95       	com	r25
 9f6:	80 95       	com	r24
 9f8:	70 95       	com	r23
 9fa:	61 95       	neg	r22
 9fc:	7f 4f       	sbci	r23, 0xFF	; 255
 9fe:	8f 4f       	sbci	r24, 0xFF	; 255
 a00:	9f 4f       	sbci	r25, 0xFF	; 255
 a02:	f0 68       	ori	r31, 0x80	; 128
 a04:	3f 2e       	mov	r3, r31
 a06:	2a e0       	ldi	r18, 0x0A	; 10
 a08:	30 e0       	ldi	r19, 0x00	; 0
 a0a:	a3 01       	movw	r20, r6
 a0c:	0e 94 2d 06 	call	0xc5a	; 0xc5a <__ultoa_invert>
 a10:	88 2e       	mov	r8, r24
 a12:	86 18       	sub	r8, r6
 a14:	45 c0       	rjmp	.+138    	; 0xaa0 <__stack+0x241>
 a16:	85 37       	cpi	r24, 0x75	; 117
 a18:	31 f4       	brne	.+12     	; 0xa26 <__stack+0x1c7>
 a1a:	23 2d       	mov	r18, r3
 a1c:	2f 7e       	andi	r18, 0xEF	; 239
 a1e:	b2 2e       	mov	r11, r18
 a20:	2a e0       	ldi	r18, 0x0A	; 10
 a22:	30 e0       	ldi	r19, 0x00	; 0
 a24:	25 c0       	rjmp	.+74     	; 0xa70 <__stack+0x211>
 a26:	93 2d       	mov	r25, r3
 a28:	99 7f       	andi	r25, 0xF9	; 249
 a2a:	b9 2e       	mov	r11, r25
 a2c:	8f 36       	cpi	r24, 0x6F	; 111
 a2e:	c1 f0       	breq	.+48     	; 0xa60 <__stack+0x201>
 a30:	18 f4       	brcc	.+6      	; 0xa38 <__stack+0x1d9>
 a32:	88 35       	cpi	r24, 0x58	; 88
 a34:	79 f0       	breq	.+30     	; 0xa54 <__stack+0x1f5>
 a36:	b5 c0       	rjmp	.+362    	; 0xba2 <__stack+0x343>
 a38:	80 37       	cpi	r24, 0x70	; 112
 a3a:	19 f0       	breq	.+6      	; 0xa42 <__stack+0x1e3>
 a3c:	88 37       	cpi	r24, 0x78	; 120
 a3e:	21 f0       	breq	.+8      	; 0xa48 <__stack+0x1e9>
 a40:	b0 c0       	rjmp	.+352    	; 0xba2 <__stack+0x343>
 a42:	e9 2f       	mov	r30, r25
 a44:	e0 61       	ori	r30, 0x10	; 16
 a46:	be 2e       	mov	r11, r30
 a48:	b4 fe       	sbrs	r11, 4
 a4a:	0d c0       	rjmp	.+26     	; 0xa66 <__stack+0x207>
 a4c:	fb 2d       	mov	r31, r11
 a4e:	f4 60       	ori	r31, 0x04	; 4
 a50:	bf 2e       	mov	r11, r31
 a52:	09 c0       	rjmp	.+18     	; 0xa66 <__stack+0x207>
 a54:	34 fe       	sbrs	r3, 4
 a56:	0a c0       	rjmp	.+20     	; 0xa6c <__stack+0x20d>
 a58:	29 2f       	mov	r18, r25
 a5a:	26 60       	ori	r18, 0x06	; 6
 a5c:	b2 2e       	mov	r11, r18
 a5e:	06 c0       	rjmp	.+12     	; 0xa6c <__stack+0x20d>
 a60:	28 e0       	ldi	r18, 0x08	; 8
 a62:	30 e0       	ldi	r19, 0x00	; 0
 a64:	05 c0       	rjmp	.+10     	; 0xa70 <__stack+0x211>
 a66:	20 e1       	ldi	r18, 0x10	; 16
 a68:	30 e0       	ldi	r19, 0x00	; 0
 a6a:	02 c0       	rjmp	.+4      	; 0xa70 <__stack+0x211>
 a6c:	20 e1       	ldi	r18, 0x10	; 16
 a6e:	32 e0       	ldi	r19, 0x02	; 2
 a70:	f8 01       	movw	r30, r16
 a72:	b7 fe       	sbrs	r11, 7
 a74:	07 c0       	rjmp	.+14     	; 0xa84 <__stack+0x225>
 a76:	60 81       	ld	r22, Z
 a78:	71 81       	ldd	r23, Z+1	; 0x01
 a7a:	82 81       	ldd	r24, Z+2	; 0x02
 a7c:	93 81       	ldd	r25, Z+3	; 0x03
 a7e:	0c 5f       	subi	r16, 0xFC	; 252
 a80:	1f 4f       	sbci	r17, 0xFF	; 255
 a82:	06 c0       	rjmp	.+12     	; 0xa90 <__stack+0x231>
 a84:	60 81       	ld	r22, Z
 a86:	71 81       	ldd	r23, Z+1	; 0x01
 a88:	80 e0       	ldi	r24, 0x00	; 0
 a8a:	90 e0       	ldi	r25, 0x00	; 0
 a8c:	0e 5f       	subi	r16, 0xFE	; 254
 a8e:	1f 4f       	sbci	r17, 0xFF	; 255
 a90:	a3 01       	movw	r20, r6
 a92:	0e 94 2d 06 	call	0xc5a	; 0xc5a <__ultoa_invert>
 a96:	88 2e       	mov	r8, r24
 a98:	86 18       	sub	r8, r6
 a9a:	fb 2d       	mov	r31, r11
 a9c:	ff 77       	andi	r31, 0x7F	; 127
 a9e:	3f 2e       	mov	r3, r31
 aa0:	36 fe       	sbrs	r3, 6
 aa2:	0d c0       	rjmp	.+26     	; 0xabe <__stack+0x25f>
 aa4:	23 2d       	mov	r18, r3
 aa6:	2e 7f       	andi	r18, 0xFE	; 254
 aa8:	a2 2e       	mov	r10, r18
 aaa:	89 14       	cp	r8, r9
 aac:	58 f4       	brcc	.+22     	; 0xac4 <__stack+0x265>
 aae:	34 fe       	sbrs	r3, 4
 ab0:	0b c0       	rjmp	.+22     	; 0xac8 <__stack+0x269>
 ab2:	32 fc       	sbrc	r3, 2
 ab4:	09 c0       	rjmp	.+18     	; 0xac8 <__stack+0x269>
 ab6:	83 2d       	mov	r24, r3
 ab8:	8e 7e       	andi	r24, 0xEE	; 238
 aba:	a8 2e       	mov	r10, r24
 abc:	05 c0       	rjmp	.+10     	; 0xac8 <__stack+0x269>
 abe:	b8 2c       	mov	r11, r8
 ac0:	a3 2c       	mov	r10, r3
 ac2:	03 c0       	rjmp	.+6      	; 0xaca <__stack+0x26b>
 ac4:	b8 2c       	mov	r11, r8
 ac6:	01 c0       	rjmp	.+2      	; 0xaca <__stack+0x26b>
 ac8:	b9 2c       	mov	r11, r9
 aca:	a4 fe       	sbrs	r10, 4
 acc:	0f c0       	rjmp	.+30     	; 0xaec <__stack+0x28d>
 ace:	fe 01       	movw	r30, r28
 ad0:	e8 0d       	add	r30, r8
 ad2:	f1 1d       	adc	r31, r1
 ad4:	80 81       	ld	r24, Z
 ad6:	80 33       	cpi	r24, 0x30	; 48
 ad8:	21 f4       	brne	.+8      	; 0xae2 <__stack+0x283>
 ada:	9a 2d       	mov	r25, r10
 adc:	99 7e       	andi	r25, 0xE9	; 233
 ade:	a9 2e       	mov	r10, r25
 ae0:	09 c0       	rjmp	.+18     	; 0xaf4 <__stack+0x295>
 ae2:	a2 fe       	sbrs	r10, 2
 ae4:	06 c0       	rjmp	.+12     	; 0xaf2 <__stack+0x293>
 ae6:	b3 94       	inc	r11
 ae8:	b3 94       	inc	r11
 aea:	04 c0       	rjmp	.+8      	; 0xaf4 <__stack+0x295>
 aec:	8a 2d       	mov	r24, r10
 aee:	86 78       	andi	r24, 0x86	; 134
 af0:	09 f0       	breq	.+2      	; 0xaf4 <__stack+0x295>
 af2:	b3 94       	inc	r11
 af4:	a3 fc       	sbrc	r10, 3
 af6:	11 c0       	rjmp	.+34     	; 0xb1a <__stack+0x2bb>
 af8:	a0 fe       	sbrs	r10, 0
 afa:	06 c0       	rjmp	.+12     	; 0xb08 <__stack+0x2a9>
 afc:	b2 14       	cp	r11, r2
 afe:	88 f4       	brcc	.+34     	; 0xb22 <__stack+0x2c3>
 b00:	28 0c       	add	r2, r8
 b02:	92 2c       	mov	r9, r2
 b04:	9b 18       	sub	r9, r11
 b06:	0e c0       	rjmp	.+28     	; 0xb24 <__stack+0x2c5>
 b08:	b2 14       	cp	r11, r2
 b0a:	60 f4       	brcc	.+24     	; 0xb24 <__stack+0x2c5>
 b0c:	b6 01       	movw	r22, r12
 b0e:	80 e2       	ldi	r24, 0x20	; 32
 b10:	90 e0       	ldi	r25, 0x00	; 0
 b12:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <fputc>
 b16:	b3 94       	inc	r11
 b18:	f7 cf       	rjmp	.-18     	; 0xb08 <__stack+0x2a9>
 b1a:	b2 14       	cp	r11, r2
 b1c:	18 f4       	brcc	.+6      	; 0xb24 <__stack+0x2c5>
 b1e:	2b 18       	sub	r2, r11
 b20:	02 c0       	rjmp	.+4      	; 0xb26 <__stack+0x2c7>
 b22:	98 2c       	mov	r9, r8
 b24:	21 2c       	mov	r2, r1
 b26:	a4 fe       	sbrs	r10, 4
 b28:	10 c0       	rjmp	.+32     	; 0xb4a <__stack+0x2eb>
 b2a:	b6 01       	movw	r22, r12
 b2c:	80 e3       	ldi	r24, 0x30	; 48
 b2e:	90 e0       	ldi	r25, 0x00	; 0
 b30:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <fputc>
 b34:	a2 fe       	sbrs	r10, 2
 b36:	17 c0       	rjmp	.+46     	; 0xb66 <__stack+0x307>
 b38:	a1 fc       	sbrc	r10, 1
 b3a:	03 c0       	rjmp	.+6      	; 0xb42 <__stack+0x2e3>
 b3c:	88 e7       	ldi	r24, 0x78	; 120
 b3e:	90 e0       	ldi	r25, 0x00	; 0
 b40:	02 c0       	rjmp	.+4      	; 0xb46 <__stack+0x2e7>
 b42:	88 e5       	ldi	r24, 0x58	; 88
 b44:	90 e0       	ldi	r25, 0x00	; 0
 b46:	b6 01       	movw	r22, r12
 b48:	0c c0       	rjmp	.+24     	; 0xb62 <__stack+0x303>
 b4a:	8a 2d       	mov	r24, r10
 b4c:	86 78       	andi	r24, 0x86	; 134
 b4e:	59 f0       	breq	.+22     	; 0xb66 <__stack+0x307>
 b50:	a1 fe       	sbrs	r10, 1
 b52:	02 c0       	rjmp	.+4      	; 0xb58 <__stack+0x2f9>
 b54:	8b e2       	ldi	r24, 0x2B	; 43
 b56:	01 c0       	rjmp	.+2      	; 0xb5a <__stack+0x2fb>
 b58:	80 e2       	ldi	r24, 0x20	; 32
 b5a:	a7 fc       	sbrc	r10, 7
 b5c:	8d e2       	ldi	r24, 0x2D	; 45
 b5e:	b6 01       	movw	r22, r12
 b60:	90 e0       	ldi	r25, 0x00	; 0
 b62:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <fputc>
 b66:	89 14       	cp	r8, r9
 b68:	38 f4       	brcc	.+14     	; 0xb78 <__stack+0x319>
 b6a:	b6 01       	movw	r22, r12
 b6c:	80 e3       	ldi	r24, 0x30	; 48
 b6e:	90 e0       	ldi	r25, 0x00	; 0
 b70:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <fputc>
 b74:	9a 94       	dec	r9
 b76:	f7 cf       	rjmp	.-18     	; 0xb66 <__stack+0x307>
 b78:	8a 94       	dec	r8
 b7a:	f3 01       	movw	r30, r6
 b7c:	e8 0d       	add	r30, r8
 b7e:	f1 1d       	adc	r31, r1
 b80:	80 81       	ld	r24, Z
 b82:	b6 01       	movw	r22, r12
 b84:	90 e0       	ldi	r25, 0x00	; 0
 b86:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <fputc>
 b8a:	81 10       	cpse	r8, r1
 b8c:	f5 cf       	rjmp	.-22     	; 0xb78 <__stack+0x319>
 b8e:	22 20       	and	r2, r2
 b90:	09 f4       	brne	.+2      	; 0xb94 <__stack+0x335>
 b92:	42 ce       	rjmp	.-892    	; 0x818 <vfprintf+0x24>
 b94:	b6 01       	movw	r22, r12
 b96:	80 e2       	ldi	r24, 0x20	; 32
 b98:	90 e0       	ldi	r25, 0x00	; 0
 b9a:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <fputc>
 b9e:	2a 94       	dec	r2
 ba0:	f6 cf       	rjmp	.-20     	; 0xb8e <__stack+0x32f>
 ba2:	f6 01       	movw	r30, r12
 ba4:	86 81       	ldd	r24, Z+6	; 0x06
 ba6:	97 81       	ldd	r25, Z+7	; 0x07
 ba8:	02 c0       	rjmp	.+4      	; 0xbae <__stack+0x34f>
 baa:	8f ef       	ldi	r24, 0xFF	; 255
 bac:	9f ef       	ldi	r25, 0xFF	; 255
 bae:	2b 96       	adiw	r28, 0x0b	; 11
 bb0:	e2 e1       	ldi	r30, 0x12	; 18
 bb2:	0c 94 a7 06 	jmp	0xd4e	; 0xd4e <__epilogue_restores__>

00000bb6 <strnlen_P>:
 bb6:	fc 01       	movw	r30, r24
 bb8:	05 90       	lpm	r0, Z+
 bba:	61 50       	subi	r22, 0x01	; 1
 bbc:	70 40       	sbci	r23, 0x00	; 0
 bbe:	01 10       	cpse	r0, r1
 bc0:	d8 f7       	brcc	.-10     	; 0xbb8 <strnlen_P+0x2>
 bc2:	80 95       	com	r24
 bc4:	90 95       	com	r25
 bc6:	8e 0f       	add	r24, r30
 bc8:	9f 1f       	adc	r25, r31
 bca:	08 95       	ret

00000bcc <strnlen>:
 bcc:	fc 01       	movw	r30, r24
 bce:	61 50       	subi	r22, 0x01	; 1
 bd0:	70 40       	sbci	r23, 0x00	; 0
 bd2:	01 90       	ld	r0, Z+
 bd4:	01 10       	cpse	r0, r1
 bd6:	d8 f7       	brcc	.-10     	; 0xbce <strnlen+0x2>
 bd8:	80 95       	com	r24
 bda:	90 95       	com	r25
 bdc:	8e 0f       	add	r24, r30
 bde:	9f 1f       	adc	r25, r31
 be0:	08 95       	ret

00000be2 <fputc>:
 be2:	0f 93       	push	r16
 be4:	1f 93       	push	r17
 be6:	cf 93       	push	r28
 be8:	df 93       	push	r29
 bea:	fb 01       	movw	r30, r22
 bec:	23 81       	ldd	r18, Z+3	; 0x03
 bee:	21 fd       	sbrc	r18, 1
 bf0:	03 c0       	rjmp	.+6      	; 0xbf8 <fputc+0x16>
 bf2:	8f ef       	ldi	r24, 0xFF	; 255
 bf4:	9f ef       	ldi	r25, 0xFF	; 255
 bf6:	2c c0       	rjmp	.+88     	; 0xc50 <fputc+0x6e>
 bf8:	22 ff       	sbrs	r18, 2
 bfa:	16 c0       	rjmp	.+44     	; 0xc28 <fputc+0x46>
 bfc:	46 81       	ldd	r20, Z+6	; 0x06
 bfe:	57 81       	ldd	r21, Z+7	; 0x07
 c00:	24 81       	ldd	r18, Z+4	; 0x04
 c02:	35 81       	ldd	r19, Z+5	; 0x05
 c04:	42 17       	cp	r20, r18
 c06:	53 07       	cpc	r21, r19
 c08:	44 f4       	brge	.+16     	; 0xc1a <fputc+0x38>
 c0a:	a0 81       	ld	r26, Z
 c0c:	b1 81       	ldd	r27, Z+1	; 0x01
 c0e:	9d 01       	movw	r18, r26
 c10:	2f 5f       	subi	r18, 0xFF	; 255
 c12:	3f 4f       	sbci	r19, 0xFF	; 255
 c14:	31 83       	std	Z+1, r19	; 0x01
 c16:	20 83       	st	Z, r18
 c18:	8c 93       	st	X, r24
 c1a:	26 81       	ldd	r18, Z+6	; 0x06
 c1c:	37 81       	ldd	r19, Z+7	; 0x07
 c1e:	2f 5f       	subi	r18, 0xFF	; 255
 c20:	3f 4f       	sbci	r19, 0xFF	; 255
 c22:	37 83       	std	Z+7, r19	; 0x07
 c24:	26 83       	std	Z+6, r18	; 0x06
 c26:	14 c0       	rjmp	.+40     	; 0xc50 <fputc+0x6e>
 c28:	8b 01       	movw	r16, r22
 c2a:	ec 01       	movw	r28, r24
 c2c:	fb 01       	movw	r30, r22
 c2e:	00 84       	ldd	r0, Z+8	; 0x08
 c30:	f1 85       	ldd	r31, Z+9	; 0x09
 c32:	e0 2d       	mov	r30, r0
 c34:	09 95       	icall
 c36:	89 2b       	or	r24, r25
 c38:	e1 f6       	brne	.-72     	; 0xbf2 <fputc+0x10>
 c3a:	d8 01       	movw	r26, r16
 c3c:	16 96       	adiw	r26, 0x06	; 6
 c3e:	8d 91       	ld	r24, X+
 c40:	9c 91       	ld	r25, X
 c42:	17 97       	sbiw	r26, 0x07	; 7
 c44:	01 96       	adiw	r24, 0x01	; 1
 c46:	17 96       	adiw	r26, 0x07	; 7
 c48:	9c 93       	st	X, r25
 c4a:	8e 93       	st	-X, r24
 c4c:	16 97       	sbiw	r26, 0x06	; 6
 c4e:	ce 01       	movw	r24, r28
 c50:	df 91       	pop	r29
 c52:	cf 91       	pop	r28
 c54:	1f 91       	pop	r17
 c56:	0f 91       	pop	r16
 c58:	08 95       	ret

00000c5a <__ultoa_invert>:
 c5a:	fa 01       	movw	r30, r20
 c5c:	aa 27       	eor	r26, r26
 c5e:	28 30       	cpi	r18, 0x08	; 8
 c60:	51 f1       	breq	.+84     	; 0xcb6 <__ultoa_invert+0x5c>
 c62:	20 31       	cpi	r18, 0x10	; 16
 c64:	81 f1       	breq	.+96     	; 0xcc6 <__ultoa_invert+0x6c>
 c66:	e8 94       	clt
 c68:	6f 93       	push	r22
 c6a:	6e 7f       	andi	r22, 0xFE	; 254
 c6c:	6e 5f       	subi	r22, 0xFE	; 254
 c6e:	7f 4f       	sbci	r23, 0xFF	; 255
 c70:	8f 4f       	sbci	r24, 0xFF	; 255
 c72:	9f 4f       	sbci	r25, 0xFF	; 255
 c74:	af 4f       	sbci	r26, 0xFF	; 255
 c76:	b1 e0       	ldi	r27, 0x01	; 1
 c78:	3e d0       	rcall	.+124    	; 0xcf6 <__ultoa_invert+0x9c>
 c7a:	b4 e0       	ldi	r27, 0x04	; 4
 c7c:	3c d0       	rcall	.+120    	; 0xcf6 <__ultoa_invert+0x9c>
 c7e:	67 0f       	add	r22, r23
 c80:	78 1f       	adc	r23, r24
 c82:	89 1f       	adc	r24, r25
 c84:	9a 1f       	adc	r25, r26
 c86:	a1 1d       	adc	r26, r1
 c88:	68 0f       	add	r22, r24
 c8a:	79 1f       	adc	r23, r25
 c8c:	8a 1f       	adc	r24, r26
 c8e:	91 1d       	adc	r25, r1
 c90:	a1 1d       	adc	r26, r1
 c92:	6a 0f       	add	r22, r26
 c94:	71 1d       	adc	r23, r1
 c96:	81 1d       	adc	r24, r1
 c98:	91 1d       	adc	r25, r1
 c9a:	a1 1d       	adc	r26, r1
 c9c:	20 d0       	rcall	.+64     	; 0xcde <__ultoa_invert+0x84>
 c9e:	09 f4       	brne	.+2      	; 0xca2 <__ultoa_invert+0x48>
 ca0:	68 94       	set
 ca2:	3f 91       	pop	r19
 ca4:	2a e0       	ldi	r18, 0x0A	; 10
 ca6:	26 9f       	mul	r18, r22
 ca8:	11 24       	eor	r1, r1
 caa:	30 19       	sub	r19, r0
 cac:	30 5d       	subi	r19, 0xD0	; 208
 cae:	31 93       	st	Z+, r19
 cb0:	de f6       	brtc	.-74     	; 0xc68 <__ultoa_invert+0xe>
 cb2:	cf 01       	movw	r24, r30
 cb4:	08 95       	ret
 cb6:	46 2f       	mov	r20, r22
 cb8:	47 70       	andi	r20, 0x07	; 7
 cba:	40 5d       	subi	r20, 0xD0	; 208
 cbc:	41 93       	st	Z+, r20
 cbe:	b3 e0       	ldi	r27, 0x03	; 3
 cc0:	0f d0       	rcall	.+30     	; 0xce0 <__ultoa_invert+0x86>
 cc2:	c9 f7       	brne	.-14     	; 0xcb6 <__ultoa_invert+0x5c>
 cc4:	f6 cf       	rjmp	.-20     	; 0xcb2 <__ultoa_invert+0x58>
 cc6:	46 2f       	mov	r20, r22
 cc8:	4f 70       	andi	r20, 0x0F	; 15
 cca:	40 5d       	subi	r20, 0xD0	; 208
 ccc:	4a 33       	cpi	r20, 0x3A	; 58
 cce:	18 f0       	brcs	.+6      	; 0xcd6 <__ultoa_invert+0x7c>
 cd0:	49 5d       	subi	r20, 0xD9	; 217
 cd2:	31 fd       	sbrc	r19, 1
 cd4:	40 52       	subi	r20, 0x20	; 32
 cd6:	41 93       	st	Z+, r20
 cd8:	02 d0       	rcall	.+4      	; 0xcde <__ultoa_invert+0x84>
 cda:	a9 f7       	brne	.-22     	; 0xcc6 <__ultoa_invert+0x6c>
 cdc:	ea cf       	rjmp	.-44     	; 0xcb2 <__ultoa_invert+0x58>
 cde:	b4 e0       	ldi	r27, 0x04	; 4
 ce0:	a6 95       	lsr	r26
 ce2:	97 95       	ror	r25
 ce4:	87 95       	ror	r24
 ce6:	77 95       	ror	r23
 ce8:	67 95       	ror	r22
 cea:	ba 95       	dec	r27
 cec:	c9 f7       	brne	.-14     	; 0xce0 <__ultoa_invert+0x86>
 cee:	00 97       	sbiw	r24, 0x00	; 0
 cf0:	61 05       	cpc	r22, r1
 cf2:	71 05       	cpc	r23, r1
 cf4:	08 95       	ret
 cf6:	9b 01       	movw	r18, r22
 cf8:	ac 01       	movw	r20, r24
 cfa:	0a 2e       	mov	r0, r26
 cfc:	06 94       	lsr	r0
 cfe:	57 95       	ror	r21
 d00:	47 95       	ror	r20
 d02:	37 95       	ror	r19
 d04:	27 95       	ror	r18
 d06:	ba 95       	dec	r27
 d08:	c9 f7       	brne	.-14     	; 0xcfc <__ultoa_invert+0xa2>
 d0a:	62 0f       	add	r22, r18
 d0c:	73 1f       	adc	r23, r19
 d0e:	84 1f       	adc	r24, r20
 d10:	95 1f       	adc	r25, r21
 d12:	a0 1d       	adc	r26, r0
 d14:	08 95       	ret

00000d16 <__prologue_saves__>:
 d16:	2f 92       	push	r2
 d18:	3f 92       	push	r3
 d1a:	4f 92       	push	r4
 d1c:	5f 92       	push	r5
 d1e:	6f 92       	push	r6
 d20:	7f 92       	push	r7
 d22:	8f 92       	push	r8
 d24:	9f 92       	push	r9
 d26:	af 92       	push	r10
 d28:	bf 92       	push	r11
 d2a:	cf 92       	push	r12
 d2c:	df 92       	push	r13
 d2e:	ef 92       	push	r14
 d30:	ff 92       	push	r15
 d32:	0f 93       	push	r16
 d34:	1f 93       	push	r17
 d36:	cf 93       	push	r28
 d38:	df 93       	push	r29
 d3a:	cd b7       	in	r28, 0x3d	; 61
 d3c:	de b7       	in	r29, 0x3e	; 62
 d3e:	ca 1b       	sub	r28, r26
 d40:	db 0b       	sbc	r29, r27
 d42:	0f b6       	in	r0, 0x3f	; 63
 d44:	f8 94       	cli
 d46:	de bf       	out	0x3e, r29	; 62
 d48:	0f be       	out	0x3f, r0	; 63
 d4a:	cd bf       	out	0x3d, r28	; 61
 d4c:	09 94       	ijmp

00000d4e <__epilogue_restores__>:
 d4e:	2a 88       	ldd	r2, Y+18	; 0x12
 d50:	39 88       	ldd	r3, Y+17	; 0x11
 d52:	48 88       	ldd	r4, Y+16	; 0x10
 d54:	5f 84       	ldd	r5, Y+15	; 0x0f
 d56:	6e 84       	ldd	r6, Y+14	; 0x0e
 d58:	7d 84       	ldd	r7, Y+13	; 0x0d
 d5a:	8c 84       	ldd	r8, Y+12	; 0x0c
 d5c:	9b 84       	ldd	r9, Y+11	; 0x0b
 d5e:	aa 84       	ldd	r10, Y+10	; 0x0a
 d60:	b9 84       	ldd	r11, Y+9	; 0x09
 d62:	c8 84       	ldd	r12, Y+8	; 0x08
 d64:	df 80       	ldd	r13, Y+7	; 0x07
 d66:	ee 80       	ldd	r14, Y+6	; 0x06
 d68:	fd 80       	ldd	r15, Y+5	; 0x05
 d6a:	0c 81       	ldd	r16, Y+4	; 0x04
 d6c:	1b 81       	ldd	r17, Y+3	; 0x03
 d6e:	aa 81       	ldd	r26, Y+2	; 0x02
 d70:	b9 81       	ldd	r27, Y+1	; 0x01
 d72:	ce 0f       	add	r28, r30
 d74:	d1 1d       	adc	r29, r1
 d76:	0f b6       	in	r0, 0x3f	; 63
 d78:	f8 94       	cli
 d7a:	de bf       	out	0x3e, r29	; 62
 d7c:	0f be       	out	0x3f, r0	; 63
 d7e:	cd bf       	out	0x3d, r28	; 61
 d80:	ed 01       	movw	r28, r26
 d82:	08 95       	ret

00000d84 <_exit>:
 d84:	f8 94       	cli

00000d86 <__stop_program>:
 d86:	ff cf       	rjmp	.-2      	; 0xd86 <__stop_program>
